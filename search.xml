<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PDP2.0配置项</title>
    <url>/2024/11/30/PDP2.0%E9%85%8D%E7%BD%AE%E9%A1%B9/</url>
    <content><![CDATA[<h2 id="配置ORACLE数据库节点"><a href="#配置ORACLE数据库节点" class="headerlink" title="配置ORACLE数据库节点"></a>配置ORACLE数据库节点</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Open3000</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">IPCFG</span>&gt;</span>&lt;![CDATA[10.176.164.204:1521/o2000]]&gt;<span class="tag">&lt;/<span class="name">IPCFG</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DATABASE</span>&gt;</span>&lt;![CDATA[EMS]]&gt;<span class="tag">&lt;/<span class="name">DATABASE</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[ORACLE]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DBUSER</span>&gt;</span>&lt;![CDATA[fhyc]]&gt;<span class="tag">&lt;/<span class="name">DBUSER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PASSWORD</span>&gt;</span>&lt;![CDATA[2a5e7b6fcbb2fb411267d01af2d6f1432d584c03fc888d71b54f0f4dacfaf2d1]]&gt;<span class="tag">&lt;/<span class="name">PASSWORD</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">BATCHEX</span>&gt;</span>&lt;![CDATA[BEGIN;,COMMIT;]]&gt;<span class="tag">&lt;/<span class="name">BATCHEX</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Open3000</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>IPCFG</code>是IP加端口+服务名</p>
</blockquote>
<h2 id="ORACLE的SQL注意事项"><a href="#ORACLE的SQL注意事项" class="headerlink" title="ORACLE的SQL注意事项"></a>ORACLE的SQL注意事项</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GetZWPlan</span> <span class="attr">db</span>=<span class="string">&quot;Open3000&quot;</span> <span class="attr">type</span>=<span class="string">&quot;load&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;time,value&quot;</span> <span class="attr">args</span>=<span class="string">&quot;s,e&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;2d&quot;</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[ </span><br><span class="line">        SELECT OCCUR_TIME, CUR_001</span><br><span class="line">        FROM EMS.yc_hs_800001</span><br><span class="line">        WHERE STA_001 = &#x27;1073741824&#x27; AND OCCUR_TIME &gt;=  TO_DATE(&#123;s&#125;,&#x27;YYYY-MM-DD HH24:MI:SS&#x27;) AND OCCUR_TIME &lt;= TO_DATE(&#123;e&#125;,&#x27;YYYY-MM-DD HH24:MI:SS&#x27;)</span><br><span class="line">        ]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">GetZWPlan</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>末尾不要加分号</li>
<li>时间要通过函数转换</li>
</ol>
<h2 id="配置Mysql数据库"><a href="#配置Mysql数据库" class="headerlink" title="配置Mysql数据库"></a>配置Mysql数据库</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ConnMain</span> <span class="attr">Name</span>=<span class="string">&quot;国调云&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">IPCFG</span>&gt;</span>&lt;![CDATA[ 192.168.6.227; Pooling=false; Allow User Variables=True;SslMode=None; ]]&gt;<span class="tag">&lt;/<span class="name">IPCFG</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DATABASE</span>&gt;</span>&lt;![CDATA[ysh_db]]&gt;<span class="tag">&lt;/<span class="name">DATABASE</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[ MYSQL ]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DBUSER</span>&gt;</span>&lt;![CDATA[root]]&gt;<span class="tag">&lt;/<span class="name">DBUSER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PASSWORD</span>&gt;</span>&lt;![CDATA[c1e9829d774eb7d21a69c40c0fb848cff88f323a050a63ae11678d6ebc0b5158]]&gt;<span class="tag">&lt;/<span class="name">PASSWORD</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">BATCHEX</span>&gt;</span>&lt;![CDATA[BEGIN;,COMMIT;]]&gt;<span class="tag">&lt;/<span class="name">BATCHEX</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ConnMain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li><strong>Pooling&#x3D;false</strong> ：设置为 <code>false</code>表示不使用连接池，每次请求都会创建新的数据库连接。</li>
<li><strong>Allow User Variables&#x3D;True</strong> ：允许在SQL查询中使用用户自定义的变量。</li>
<li><strong>SslMode&#x3D;None</strong> ：当设置为 <code>None</code>时，表示不使用SSL连接。</li>
</ol>
]]></content>
      <categories>
        <category>框架</category>
        <category>PDP2</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>PDP2.0类</title>
    <url>/2024/12/06/PDP2.0%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="读取XML"><a href="#读取XML" class="headerlink" title="读取XML"></a>读取XML</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Linger.Common.XmlHelper xml = <span class="keyword">new</span> Linger.Common.XmlHelper(<span class="string">&quot;environment.xml&quot;</span>);</span><br><span class="line"><span class="built_in">string</span> current = xml.GetNodeValue(<span class="string">&quot;CURRENT&quot;</span>).Trim();</span><br><span class="line">XmlNode currentConfig = xml.GetXmlNode(current);</span><br><span class="line">mapUrl = xml.GetNodeValue(current+ <span class="string">&quot;/MPA_URL&quot;</span>).Trim();</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>new Linger.Common.XmlHelper(&quot;environment.xml&quot;);</code>读取固定路径 &#x2F;App_Data&#x2F;下的文件</p>
<p><code>environment.xml</code> 也可以拼路径 如 <code>load/environment.xml</code>就是读&#x2F;App_Data&#x2F;load&#x2F;environment.xml文件</p>
<p>读取文件下的执行节点可以传相对路径</p>
<p>读取CDATA内的值使用xml.GetNodeValue(“CURRENT”)</p>
</blockquote>
]]></content>
      <categories>
        <category>框架</category>
        <category>PDP2</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>PDP2.0问题集合</title>
    <url>/2024/11/20/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h2 id="大小写问题"><a href="#大小写问题" class="headerlink" title="大小写问题"></a>大小写问题</h2><p>linux上区分大小写 windows上不区分大小写  当同时存在 <code>bin</code>和 <code>Bin</code>时读取要编译的dll会读取Bin下的dll</p>
<h2 id="编译不通过问题"><a href="#编译不通过问题" class="headerlink" title="编译不通过问题"></a>编译不通过问题</h2><p>linux下吧没法编译并且LOG里面没有记录可能是由以下的dll造成的</p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093362747.jpg" alt="1732093362747"></p>
<p><strong>云南主配微排除查出来的dll</strong></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093463492.jpg" alt="1732093463492"></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093510245.jpg" alt="1732093510245"></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093524740.jpg" alt="1732093524740"></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093541496.jpg" alt="1732093541496"></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093574196.jpg" alt="1732093574196"></p>
<p><img src="/image/PDP2.0%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/1732093592842.jpg" alt="1732093592842"></p>
<h2 id="aspx文件请求Not-Found"><a href="#aspx文件请求Not-Found" class="headerlink" title="aspx文件请求Not Found"></a>aspx文件请求Not Found</h2><p>一把报错为 <code>ip/ajaxpro/... not found</code></p>
<p><strong>解决办法</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">httpHandlers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">verb</span>=<span class="string">&quot;POST,GET&quot;</span> <span class="attr">path</span>=<span class="string">&quot;ajaxpro*.ashx&quot;</span> <span class="attr">type</span>=<span class="string">&quot;AjaxPro.AjaxHandlerFactory, AjaxPro.2&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">httpHandlers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="用户模块添加用户报错"><a href="#用户模块添加用户报错" class="headerlink" title="用户模块添加用户报错"></a>用户模块添加用户报错</h2>]]></content>
      <categories>
        <category>框架</category>
        <category>PDP2</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>PDP获取数据</title>
    <url>/2024/11/07/PDP%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="pdp获取数据"><a href="#pdp获取数据" class="headerlink" title="pdp获取数据"></a>pdp获取数据</h1><h2 id="获取参数的节点写法"><a href="#获取参数的节点写法" class="headerlink" title="获取参数的节点写法"></a>获取参数的节点写法</h2><p>type&#x3D;”sql” sql节点获取sql数据<br>fields&#x3D;”ID,Name” 获得数据的别名 ，目前不加默认为数组，通过索引获取，加了为一个数组的对象，<br>args: 输入的参数</p>
<p>db:数据库节点</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test1</span> <span class="attr">db</span>=<span class="string">&quot;SGAPP&quot;</span> <span class="attr">type</span>=<span class="string">&quot;sql&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;ID,Name&quot;</span> <span class="attr">args</span>=<span class="string">&quot;type&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;2d&quot;</span>&gt;</span>  </span><br><span class="line">    &lt;![CDATA[SELECT ID,NAME AS Name FROM SG_DB.SG_CON_PLANT_B WHERE PLANT_TYPE=&#123;type&#125;]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">test1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">type</span>=<span class="string">&quot;dll&quot;</span> <span class="attr">dll</span>=<span class="string">&quot;PDP2.0:PDP.GetSystemParameter&quot;</span> <span class="attr">args</span>=<span class="string">&quot;key&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;2d&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="单条sql获取数据"><a href="#单条sql获取数据" class="headerlink" title="单条sql获取数据"></a>单条sql获取数据</h2><p>新写法：PDP.load<br>第一个参数为 “节点位置和名称，第二个位置通过对象传递参数，对象名为sql节点的参数名”</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PDP</span>.<span class="title function_">load</span>(<span class="string">&quot;sync:test1&quot;</span>,&#123;<span class="attr">type</span>:<span class="number">1006</span>&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="多条sql获取数据"><a href="#多条sql获取数据" class="headerlink" title="多条sql获取数据"></a>多条sql获取数据</h2><p>PDP.exec<br>每一条数据是一个对象，所有的打包在一个数组里<br>每个对象里的写法<br>声明type为load<br>xml:加载的sql节点 ,args:传递的参数，用对象传递</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PDP</span>.<span class="title function_">exec</span>([&#123; <span class="attr">type</span>:<span class="string">&quot;load&quot;</span>,<span class="attr">xml</span>:<span class="string">&quot;sync:test1&quot;</span>,<span class="attr">args</span>:&#123;<span class="attr">type</span>:<span class="number">1006</span>&#125;&#125;])</span><br></pre></td></tr></table></figure>

<p>SELECT * FROM SG_META_TABLE</p>
<p>SELECT * FROM SG_META_OBJECT</p>
<p>SELECT *  FROM SG_META_TABLE WHERE TABLE_NAME_ENG LIKE ‘%DEV_ACLINE%’</p>
<p>SELECT * FROM SG_CON_SUBSTATION_B</p>
<p>select * from ys_db_hb.ysh_sc_station</p>
<h2 id="模拟数据写法"><a href="#模拟数据写法" class="headerlink" title="模拟数据写法"></a>模拟数据写法</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;id,name&quot;</span> <span class="attr">args</span>=<span class="string">&quot;&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;2d&quot;</span>&gt;</span></span><br><span class="line">    1,张三</span><br><span class="line">    2,李四</span><br><span class="line"><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="链接查询sql写法"><a href="#链接查询sql写法" class="headerlink" title="链接查询sql写法"></a>链接查询sql写法</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">type</span>=<span class="string">&quot;calc&quot;</span> <span class="attr">args</span>=<span class="string">&quot;devid&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;2d&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;name&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">fields</span>=<span class="string">&quot;id,&quot;</span>&gt;</span></span><br><span class="line">      &lt;![CDATA[SELECT ZC_ID FROM YS_DB.YSH_GUD_DEVICE WHERE jxt_id=&#123;devid&#125;]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span> <span class="attr">args</span>=<span class="string">&quot;a.id&quot;</span>&gt;</span></span><br><span class="line">      &lt;![CDATA[SELECT col3 FROM YS_DB.YSH_SC_DEVICE WHERE ID=&#123;a.id&#125;]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参数往下穿，最外层的fields获取最下面的节点</p>
<h2 id="union-SQL写法"><a href="#union-SQL写法" class="headerlink" title="union SQL写法"></a>union SQL写法</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GetAllLinesLeng</span> <span class="attr">type</span>=<span class="string">&quot;union&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;ID,Length,Voltage&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ac</span> <span class="attr">db</span>=<span class="string">&quot;SGC&quot;</span> <span class="attr">type</span>=<span class="string">&quot;sql&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;ID,Length,Voltage&quot;</span>&gt;</span></span><br><span class="line">		&lt;![CDATA[ </span><br><span class="line">     SELECT A.ID,A.LENGTH,&#x27;交流&#x27; || V.NAME FROM SG_DATACENTER.SG_DEV_ACLINE_B AS A</span><br><span class="line">  JOIN SG_DATACENTER.SG_DIC_VOLTAGETYPE V </span><br><span class="line">     ON A.VOLTAGE_TYPE = V.CODE</span><br><span class="line">  WHERE V.CODE IN (1001,1003)</span><br><span class="line">     ]]&gt;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">ac</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dc</span> <span class="attr">db</span>=<span class="string">&quot;SGC&quot;</span> <span class="attr">type</span>=<span class="string">&quot;sql&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;ID,Length,Voltage&quot;</span>&gt;</span></span><br><span class="line">		&lt;![CDATA[ </span><br><span class="line">     SELECT A.ID,A.LENGTH,&#x27;直流&#x27; FROM SG_DATACENTER.SG_DEV_DCLINE_B AS A</span><br><span class="line">     JOIN (SELECT CODE,NAME FROM SG_DATACENTER.SG_DIC_VOLTAGETYPE ) AS B</span><br><span class="line">     ON A.VOLTAGE_TYPE = B.CODE</span><br><span class="line">     ]]&gt;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">dc</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GetAllLinesLeng</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="跨年写法"><a href="#跨年写法" class="headerlink" title="跨年写法"></a>跨年写法</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">type</span>=<span class="string">&quot;period&quot;</span> <span class="attr">period</span>=<span class="string">&quot;y&quot;</span> <span class="attr">s</span>=<span class="string">&quot;0&quot;</span> <span class="attr">e</span>=<span class="string">&quot;1&quot;</span> <span class="attr">args</span>=<span class="string">&quot;st,et&quot;</span>&gt;</span></span><br><span class="line">	&lt;![CDATA[</span><br><span class="line">	SELECT * FROM SG_DATACENTER.SG_COM_TYPHOON_H_FORECAST_@T@&#123;0:yyyy&#125; </span><br><span class="line">	]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="内存数据库写法"><a href="#内存数据库写法" class="headerlink" title="内存数据库写法"></a>内存数据库写法</h2><blockquote>
<p>可以将多个表查到服务器内存后建立内存数据库，故只能从data的表中执行SQL</p>
<p>index为内存数据库表创建索引，</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">memory</span> <span class="attr">type</span>=<span class="string">&quot;memory&quot;</span> <span class="attr">args</span>=<span class="string">&quot;st,et&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">		&lt;![CDATA[</span><br><span class="line">		SELECT * FROM SG_DATACENTER.SG_COM_TYPHOON_H_FORECAST_@T@&#123;0:yyyy&#125; </span><br><span class="line">		]]&gt;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">index</span> <span class="attr">a</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">index</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">sql</span>&gt;</span></span><br><span class="line">		&lt;![CDATA[</span><br><span class="line">		SELECT * FROM a</span><br><span class="line">		]]&gt;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">memory</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="calc上一条sql结果是下一条的条件"><a href="#calc上一条sql结果是下一条的条件" class="headerlink" title="calc上一条sql结果是下一条的条件"></a>calc上一条sql结果是下一条的条件</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span>test type<span class="operator">=</span>&quot;calc&quot; args<span class="operator">=</span>&quot;devid&quot; datatype<span class="operator">=</span>&quot;2d&quot; fields<span class="operator">=</span>&quot;name&quot; a<span class="operator">=</span>&quot;115123265642443316&quot;<span class="operator">&gt;</span></span><br><span class="line">       <span class="operator">&lt;</span>a fields<span class="operator">=</span>&quot;id,&quot;<span class="operator">&gt;</span></span><br><span class="line">     <span class="operator">&lt;</span><span class="operator">!</span>[CDATA[<span class="keyword">SELECT</span> ZC_ID <span class="keyword">FROM</span> ]]<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">!</span>[CDATA[same:SearchDistrictCommonSql:SchemaAppName]]<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">!</span>[CDATA[YSH_GUD_DEVICE <span class="keyword">WHERE</span> jxt_id<span class="operator">=</span>&#123;devid&#125;]]<span class="operator">&gt;</span></span><br><span class="line">   <span class="operator">&lt;</span><span class="operator">/</span>a<span class="operator">&gt;</span></span><br><span class="line">       <span class="operator">&lt;</span>b args<span class="operator">=</span>&quot;a.id&quot;<span class="operator">&gt;</span></span><br><span class="line">     <span class="operator">&lt;</span><span class="operator">!</span>[CDATA[<span class="keyword">SELECT</span> col3 <span class="keyword">FROM</span> ]]<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">!</span>[CDATA[same:SearchDistrictCommonSql:SchemaAppName]]<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">!</span>[CDATA[YSH_SC_DEVICE <span class="keyword">WHERE</span> ID<span class="operator">=</span>&#123;a.id&#125;]]<span class="operator">&gt;</span></span><br><span class="line">   <span class="operator">&lt;</span><span class="operator">/</span>b<span class="operator">&gt;</span></span><br><span class="line">   <span class="operator">&lt;</span><span class="operator">/</span>test<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="if写法"><a href="#if写法" class="headerlink" title="if写法"></a>if写法</h2><h2 id="Insert-获取自增id"><a href="#Insert-获取自增id" class="headerlink" title="Insert 获取自增id"></a>Insert 获取自增id</h2><p>insert SQL语句下面的sql想用增加后的id</p>
<p>需要返回自增id的SQL请求条件type 为new,使用的为本身，使用上面返回的自增id使用占位符type可以干掉</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; ref: &quot;0&quot;, value: -1, type: &quot;string&quot; &#125;</span><br></pre></td></tr></table></figure>

<h2 id="获取用户id"><a href="#获取用户id" class="headerlink" title="获取用户id"></a>获取用户id</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">ref</span>: <span class="string">&quot;lib&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;userid&quot;</span> &#125;</span><br></pre></td></tr></table></figure>

<h2 id="复用SQL的节点"><a href="#复用SQL的节点" class="headerlink" title="复用SQL的节点"></a>复用SQL的节点</h2><p>注释语法same : 节点名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;![CDATA[same:SearchDistrictCommonSql:SchemaAppName]]&gt;</span><br></pre></td></tr></table></figure>

<h1 id="设计文件获取SQL的写法"><a href="#设计文件获取SQL的写法" class="headerlink" title="设计文件获取SQL的写法"></a>设计文件获取SQL的写法</h1><h2 id="datasource节点获取"><a href="#datasource节点获取" class="headerlink" title="datasource节点获取"></a>datasource节点获取</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datasource</span> <span class="attr">type</span>=<span class="string">&quot;load&quot;</span> <span class="attr">id</span>=<span class="string">&quot;factorys&quot;</span> <span class="attr">desc</span>=<span class="string">&quot;生产厂家正序&quot;</span> <span class="attr">node</span>=<span class="string">&quot;sc/sbzc:top5/factory&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cols</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">&quot;col_type&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">desc</span>=<span class="string">&quot;type&quot;</span> <span class="attr">from</span>=<span class="string">&quot;seldevtype&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">&quot;col_factory&quot;</span> <span class="attr">name</span>=<span class="string">&quot;factory&quot;</span> <span class="attr">desc</span>=<span class="string">&quot;factory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">id</span>=<span class="string">&quot;col_count&quot;</span> <span class="attr">name</span>=<span class="string">&quot;count&quot;</span> <span class="attr">desc</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">cols</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datasource</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>1、datasource在datasources节点下</p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>请求类型</td>
<td>load|read|dll</td>
</tr>
<tr>
<td>id</td>
<td>获取到的参数的名字</td>
<td></td>
</tr>
<tr>
<td>desc</td>
<td>获取参数失败的提示</td>
<td></td>
</tr>
<tr>
<td>node</td>
<td>节点名</td>
<td>：前的是文件路径，冒号后的是根节点，根节点下一层的SQL节点通过&#x2F;获取</td>
</tr>
</tbody></table>
<p>col:name为字段名字</p>
<p>from ：是条件变量，name是条件字段的名字</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> this.load_deviceType(true,() =&gt; &#123;</span><br><span class="line">    console.log(this.deviceType)</span><br><span class="line">    var devtypes = [];</span><br><span class="line">    this.deviceType.forEach(item =&gt; &#123;</span><br><span class="line">      devtypes.push([item.type,item.type])</span><br><span class="line">    &#125;)</span><br><span class="line">    this.devtypes = devtypes;</span><br><span class="line">    this.seldevtype = devtypes[0][0];</span><br><span class="line">  </span><br><span class="line">    this.getFactoryTopData();</span><br><span class="line">    this.$nextTick(function()&#123;</span><br><span class="line">      this.resize();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>类型名_SQL变量名，是发布后的SQL请求函数，获取的值是返回值的value</p>
<blockquote>
<p>异步方法：</p>
<p>this.load_deviceType(true,() &#x3D;&gt; {}）是回调函数，在有依赖关系时使用</p>
<p>同步方法：</p>
<p>var res &#x3D; this.load_deviceType();直接拿到值</p>
</blockquote>
<h2 id="直接通过函数调用"><a href="#直接通过函数调用" class="headerlink" title="直接通过函数调用"></a>直接通过函数调用</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//单条</span><br><span class="line">PDP.load(&quot;sync:test1&quot;,&#123;type:1006&#125;)</span><br><span class="line">//多条</span><br><span class="line">PDP.exec([&#123; type:&quot;load&quot;,xml:&quot;sync:test1&quot;,args:&#123;type:1006&#125;&#125;])</span><br></pre></td></tr></table></figure>

<h2 id="同步写法"><a href="#同步写法" class="headerlink" title="同步写法"></a>同步写法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var user = PDP.load_userInfo();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>框架</category>
        <category>PDP2</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>PDP调用接口</title>
    <url>/2024/11/07/PDP%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h1 id="PDP调用接口"><a href="#PDP调用接口" class="headerlink" title="PDP调用接口"></a>PDP调用接口</h1><p>PDP调用接口有两种,个人理解，两者都是http请求先到.ashx分发到对应函数，然后将讲函数返回值，通过http响应传给前端。</p>
<h2 id="通过load类型调用"><a href="#通过load类型调用" class="headerlink" title="通过load类型调用"></a>通过load类型调用</h2><p>1、写配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">SetDeviceWhiteList</span> <span class="attr">type</span>=<span class="string">&quot;dll&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;json&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;ipE,device&quot;</span> <span class="attr">dll</span>=<span class="string">&quot;RCMain:RC.Main.SetDeviceWhiteList&quot;</span> <span class="attr">args</span>=<span class="string">&quot;ipE,device&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SetDeviceWhiteList</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>用法</th>
</tr>
</thead>
<tbody><tr>
<td>fields，args</td>
<td>String</td>
<td>两者一样，和传入参数名一样即可</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>2、前端调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PDP</span>.<span class="title function_">load</span>(<span class="string">&quot;main/remote:SetDeviceWhiteList&quot;</span>, &#123; <span class="attr">ipE</span>: vm.<span class="property">selRow</span>.<span class="property">ip</span>, <span class="attr">device</span>: whiteList &#125;, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    vm.<span class="property">$Message</span>.<span class="title function_">success</span>(<span class="string">&quot;设置白名单成功!&quot;</span>)</span><br><span class="line">    vm.<span class="property">showDeviceWhitelist</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="PDP-dll调用"><a href="#PDP-dll调用" class="headerlink" title="PDP.dll调用"></a>PDP.dll调用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PDP</span>.<span class="title function_">dll</span>(<span class="string">&quot;RCMain:RC.Main.RemoteControl&quot;</span>, [<span class="variable language_">this</span>.<span class="property">itemid</span>, remoteIp, netIP, port, osType, lowProtocol, userName, userPassword], <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;）</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="PDP调用API接口"><a href="#PDP调用API接口" class="headerlink" title="PDP调用API接口"></a>PDP调用API接口</h2><p><strong>PDP调用示例:</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PDP</span>.<span class="title function_">load</span>(<span class="string">&quot;jb/api:getLastImgListByCode&quot;</span>, &#123; <span class="attr">code</span>: code, <span class="attr">devCode</span>: code, <span class="attr">ak</span>: <span class="variable language_">this</span>.<span class="property">ak</span>, <span class="attr">token</span>: <span class="variable language_">this</span>.<span class="property">token</span>, <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>(), <span class="attr">nonce</span>: <span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span>) + <span class="string">&quot;&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() &#125;, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;getLastImgListByCode&quot;</span>, res);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<p><strong>配置项示例:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">httppost</span> <span class="attr">type</span>=<span class="string">&quot;httppost&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;json&quot;</span> <span class="attr">args</span>=<span class="string">&quot;id&quot;</span> <span class="attr">Content-Type</span>=<span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>&lt;![CDATA[http://127.0.0.1:8003/conn/ashx/AskHandler.ashx]]&gt;<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">data</span>&gt;</span>&lt;![CDATA[&#123;&#123; &quot;m&quot;: &quot;GetDataList&quot;, &quot;node&quot;: &quot;GetUserID&quot;, &quot;args&quot;: &quot;&#123;id&#125;&quot; &#125;&#125;]]&gt;<span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">headers</span> <span class="attr">ajaxToken</span>=<span class="string">&quot;Method&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">headers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">httppost</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">httpget</span> <span class="attr">type</span>=<span class="string">&quot;httpget&quot;</span> <span class="attr">datatype</span>=<span class="string">&quot;json,2d&quot;</span> <span class="attr">fields</span>=<span class="string">&quot;group,name,value&quot;</span> <span class="attr">field</span>=<span class="string">&quot;1&quot;</span> <span class="attr">args</span>=<span class="string">&quot;conn,xml,args&quot;</span>&gt;</span></span><br><span class="line">  &lt;![CDATA[http://127.0.0.1:8003/conn/ashx/DataHandler.ashx?m=Read&amp;conn=&#123;conn&#125;&amp;xml=&#123;xml&#125;&amp;args=&#123;args&#125;]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">httpget</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>和一般的load调用方法一致</p>
<p>httppost  这最外层的节点名称可以修改</p>
</blockquote>
]]></content>
      <categories>
        <category>框架</category>
        <category>PDP2</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>云南出差见闻</title>
    <url>/2024/11/20/%E4%BA%91%E5%8D%97%E5%87%BA%E5%B7%AE%E8%A7%81%E9%97%BB/</url>
    <content><![CDATA[<h2 id="项目初版搭建"><a href="#项目初版搭建" class="headerlink" title="项目初版搭建"></a>项目初版搭建</h2><p>1、项目需要和虚拟机保持操作系统和jexus版本一致方便重现问题</p>
<p>2、更新至现场前需要将所有相关的进程全部停掉，重新启动后没有问题再将linux的程序更新至现场</p>
<p>3、初版的配置可由工程将现场参数传回后由研发配置</p>
<p>4、工程需要一些辅助工具或者脚本，如备份更新脚本 兼具回滚功能；图模数据校验工具</p>
<h2 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h2><h2 id="telnat"><a href="#telnat" class="headerlink" title="telnat"></a>telnat</h2>]]></content>
      <categories>
        <category>项目</category>
        <category>地理信息导航</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
      </tags>
  </entry>
  <entry>
    <title>冀北超高压</title>
    <url>/2024/11/07/%E5%86%80%E5%8C%97%E8%B6%85%E9%AB%98%E5%8E%8B/</url>
    <content><![CDATA[<h2 id="对接接口的一般实现步骤"><a href="#对接接口的一般实现步骤" class="headerlink" title="对接接口的一般实现步骤"></a>对接接口的一般实现步骤</h2><ol>
<li>使用curl等工具让工程在现场测试通接口</li>
<li>在保证接口畅通的情况下再进行程序的开发</li>
<li>严格遵守这一顺序可按时下班。httpposthttppost</li>
</ol>
<h2 id="对接统一视频平台"><a href="#对接统一视频平台" class="headerlink" title="对接统一视频平台"></a>对接统一视频平台</h2><p>1、获取杆塔需要获取外网的图片机的数据所以需要穿透权限</p>
<p>2、设备code 获取通过树结构资源获取接口逐层获取直至杆塔ID层级</p>
<p>3、调用接口只有 <strong>查询最新图片信息</strong> 接口可用  接口中的双斜线 是错误要去掉</p>
<p>4、鉴权和获取资源不会报跨域 查询最新图片信息接口会跨域  需要使用PDP.load调用api的方式来规避</p>
<p>5、PDP.load调用api的方式来规避  需要查看 网站内是否有 <code>Mono.Security.dll</code> 该dll会造成调用失败  一般为超时错误</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>地理信息导航</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
      </tags>
  </entry>
  <entry>
    <title>地理信息导航总结</title>
    <url>/2024/11/07/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%AF%BC%E8%88%AA%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="Conncfg配置"><a href="#Conncfg配置" class="headerlink" title="Conncfg配置"></a>Conncfg配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ConnMain</span> <span class="attr">Name</span>=<span class="string">&quot;审计日志&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">IPCFG</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[192.168.12.82]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">IPCFG</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DATABASE</span>&gt;</span>&lt;![CDATA[ys_db]]&gt;<span class="tag">&lt;/<span class="name">DATABASE</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[MYSQL]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">PROVIDER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DBUSER</span>&gt;</span>&lt;![CDATA[root]]&gt;<span class="tag">&lt;/<span class="name">DBUSER</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PASSWORD</span>&gt;</span>&lt;![CDATA[042fd2789843ff96fddf38a8fe5d763eaec70ec3838dc662ebb1bf0464926fbb]]&gt;<span class="tag">&lt;/<span class="name">PASSWORD</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">BATCHEX</span>&gt;</span>&lt;![CDATA[BEGIN;,COMMIT;]]&gt;<span class="tag">&lt;/<span class="name">BATCHEX</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SETTINGS</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ConnMain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>标记</th>
<th>作用</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>ConnMain</td>
<td>数据库节点名称，一个节点代表一个库的配置</td>
<td></td>
</tr>
<tr>
<td>IPCFG</td>
<td>数据库IP和端口</td>
<td>没写端口为默认端口</td>
</tr>
<tr>
<td>DATABASE</td>
<td>指定默认数据库</td>
<td></td>
</tr>
<tr>
<td>PROVIDER</td>
<td>指定数据库类型</td>
<td></td>
</tr>
<tr>
<td>DBUSER</td>
<td>用户名</td>
<td></td>
</tr>
<tr>
<td>PASSWORD</td>
<td>密码(加密后的)</td>
<td></td>
</tr>
<tr>
<td>SETTINGS</td>
<td>事务.未设置时默认为BEGIN;END;</td>
<td>要以,分割；</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>项目</category>
        <category>地理信息导航</category>
      </categories>
      <tags>
        <tag>PDP2</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>项目功能清单</title>
    <url>/2024/11/20/%E9%A1%B9%E7%9B%AE%E5%8A%9F%E8%83%BD%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<h2 id="项目注意事项"><a href="#项目注意事项" class="headerlink" title="项目注意事项"></a>项目注意事项</h2><h3 id="供电路径"><a href="#供电路径" class="headerlink" title="供电路径"></a>供电路径</h3><ol>
<li>接线图供电路径整体为 网页发送websocket消息至花海燕服务 ，花海燕服务为消息转发  ，花海燕消息转发给张聪的服务进行计算，将结果返回给花海燕服务再返回给页面</li>
<li>花海燕服务 有三个端口  第一个和网页交互的端口 IP要设置为 <code>0.0.0.0</code> 剩余两个端口是和张聪的服务做交互  其ip要设置为127.0.0.1  或者真实IP，该服务 server  和client   要和张聪的服务IP做交叉</li>
<li>花海燕服务下有两个exe   AI开头的带有[[[]]]]三个方括号的标识符   Web开头的没有携带标识符</li>
<li>张聪的服务需要标识符才能接收到消息</li>
<li>张聪的服务启动很耗费时间只有其完全将数据读入内存后才能正常提供服务。</li>
<li>两个服务的消息接受转发都记录在SK开头的日志，张聪的服务是否启动的日志是NORMAL开头</li>
</ol>
<h3 id="供电路径调试记录"><a href="#供电路径调试记录" class="headerlink" title="供电路径调试记录"></a>供电路径调试记录</h3><p>1、调试消息交互按照消息的传递路径一个节点一个节点的验证，验证顺序为1、收到消息这一动作是否执行，2、收到的消息格式是否正确3、是否对收到的消息做了正确的响应。</p>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ul>
<li><code>127.0.0.1</code> 是本地回环地址，仅用于本机通信 （任何发送到 <code>127.0.0.1</code> 的网络请求都不会发送到外部网络，而是会回送到本机。）。</li>
<li><code>0.0.0.0</code> 是一个通配符地址，允许服务接受所有地址的连接 （当一个服务绑定到 <code>0.0.0.0</code> 时，意味着它将监听来自所有可用IP地址的请求，而不仅仅是本机请求）。</li>
<li>实际IP是设备在网络中的唯一标识，用于进行外部通信（与 <code>127.0.0.1</code> 和 <code>0.0.0.0</code> 的区别在于，实际IP是分配给特定设备的，可以是动态或静态的，而前两者是特殊用途的地址）。</li>
</ul>
<blockquote>
<p>如果你的服务需要接受来自不同主机的 WebSocket 消息，那么将服务的监听 IP 设置为 <code>0.0.0.0</code> 是一个合适的选择。</p>
</blockquote>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>清单</tag>
        <tag>经验</tag>
        <tag>注意事项</tag>
      </tags>
  </entry>
  <entry>
    <title>AI提示词技巧及示例</title>
    <url>/2025/02/06/AI%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7%E5%8F%8A%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="提示词的技巧"><a href="#提示词的技巧" class="headerlink" title="提示词的技巧"></a>提示词的技巧</h2><ol>
<li>正确的语法和标题</li>
<li>简短而明确的句子</li>
<li>给出精确的要求</li>
</ol>
<h2 id="好的提示的组成"><a href="#好的提示的组成" class="headerlink" title="好的提示的组成"></a>好的提示的组成</h2><ol>
<li>背景信息(选填)</li>
<li>具体要执行的任务(必填)</li>
<li>要处理的数据(选填)</li>
<li>输出内容的格式(选填)</li>
</ol>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>AI</tag>
        <tag>提示</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepSeek部署记录</title>
    <url>/2025/02/10/DeepSeek%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>RX6600 不在官方 ROC的支持序列里面</p>
<h2 id="下载魔改-ollama"><a href="#下载魔改-ollama" class="headerlink" title="下载魔改 ollama"></a>下载魔改 <code>ollama</code></h2><p><a href="https://github.com/likelovewant/ollama-for-amd/releases/tag/v0.5.4">Release v0.5.4 · likelovewant&#x2F;ollama-for-amd</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id="退出ollama"><a href="#退出ollama" class="headerlink" title="退出ollama"></a>退出ollama</h2><h2 id="替换相应的ROCM库"><a href="#替换相应的ROCM库" class="headerlink" title="替换相应的ROCM库"></a>替换相应的ROCM库</h2><p>   需要寻找到对应安装位置<br>   显卡对应编号：<a href="https://github.com/likelovewant/ollama-for-amd/wiki/AMD-GPU-Arches-lists-Info">AMD GPU Arches lists Info · likelovewant&#x2F;ollama-for-amd Wiki</a><br>   库：<a href="https://github.com/likelovewant/ROCmLibs-for-gfx1103-AMD780M-APU/releases">Releases · likelovewant&#x2F;ROCmLibs-for-gfx1103-AMD780M-APU</a></p>
<h2 id="下载对应的蒸馏模型"><a href="#下载对应的蒸馏模型" class="headerlink" title="下载对应的蒸馏模型"></a>下载对应的蒸馏模型</h2><p>   如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure>

<p>   即可在命令行回答问题</p>
<p><img src="/image/DeepSeek%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/1738767381879.png" alt="1738767381879"></p>
<h2 id="修改模型所在磁盘位置"><a href="#修改模型所在磁盘位置" class="headerlink" title="修改模型所在磁盘位置"></a>修改模型所在磁盘位置</h2><p>   <img src="/image/DeepSeek%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/1738767604850.png" alt="1738767604850"></p>
<p>   <img src="/image/DeepSeek%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/1738767761030.png" alt="1738767761030"></p>
<p>   <code>C:\Users\songyanglin\.ollama</code>下的models移动到环境变量</p>
<p>   <img src="/image/DeepSeek%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/1738768228400.png" alt="1738768228400"></p>
<p>   通过它进行验证</p>
<p>   <a href="https://ollama.readthedocs.io/quickstart/#_18">快速入门 - Ollama 中文文档</a></p>
<p>其他模型下载方式</p>
<p><a href="https://modelscope.cn/models">魔搭社区</a></p>
<p>下载GUUF格式  配置 modelFile  使用ollama命令行生成新的模型来使用</p>
<h2 id="ChatBox搭建UI"><a href="#ChatBox搭建UI" class="headerlink" title="ChatBox搭建UI"></a>ChatBox搭建UI</h2><p>下载并安装<a href="https://chatboxai.app/zh?c=download-windows">Chatbox AI官网：办公学习的AI好助手，全平台AI客户端，官方免费下载</a></p>
<p>配置API Key  即可使用</p>
<blockquote>
<p>使用体验一般</p>
</blockquote>
<h2 id="Cherry-Studio"><a href="#Cherry-Studio" class="headerlink" title="Cherry Studio"></a>Cherry Studio</h2><p><a href="https://cherry-ai.com/">Cherry Studio - 全能的AI助手</a></p>
<h2 id="Vscode接入API"><a href="#Vscode接入API" class="headerlink" title="Vscode接入API"></a>Vscode接入API</h2><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><ol>
<li>使用continue插件</li>
<li>申请API Key  目前官网的API  使用很卡，可暂时用其他云公司提供的API  (目前使用硅基流动提供的API)</li>
<li>配置continue的config <a href="https://docs.continue.dev/reference/">config.json 参考资料</a></li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DeepSeek&quot;</span><span class="punctuation">,</span> <span class="comment">// 模型名称</span></span><br><span class="line">            <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek-chat&quot;</span><span class="punctuation">,</span> <span class="comment">// 使用的 DeepSeek 模型</span></span><br><span class="line">            <span class="attr">&quot;contextLength&quot;</span><span class="punctuation">:</span> <span class="number">128000</span><span class="punctuation">,</span> <span class="comment">// 上下文长度</span></span><br><span class="line">            <span class="attr">&quot;apiKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 替换为你的 DeepSeek API Key</span></span><br><span class="line">            <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek&quot;</span><span class="punctuation">,</span> <span class="comment">// 模型提供商</span></span><br><span class="line">            <span class="attr">&quot;apiBase&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.deepseek.com/v1&quot;</span> <span class="comment">// DeepSeek API 地址</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tabAutocompleteModel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DeepSeek Coder&quot;</span><span class="punctuation">,</span> <span class="comment">// 代码补全模型名称</span></span><br><span class="line">        <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek-coder&quot;</span><span class="punctuation">,</span> <span class="comment">// 使用的 DeepSeek 代码补全模型</span></span><br><span class="line">        <span class="attr">&quot;apiKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 替换为你的 DeepSeek API Key</span></span><br><span class="line">        <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek&quot;</span><span class="punctuation">,</span> <span class="comment">// 模型提供商</span></span><br><span class="line">        <span class="attr">&quot;apiBase&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.deepseek.com/v1&quot;</span> <span class="comment">// DeepSeek API 地址</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;contextProviders&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docs&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;diff&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;terminal&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;problems&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;folder&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;codebase&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;slashCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;share&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Export the current chat session to markdown&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generate a shell command&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commit&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generate a git commit message&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="cline"><a href="#cline" class="headerlink" title="cline"></a>cline</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.bilibili.com/video/BV16DFGe4EFG/?spm_id_from=333.337.search-card.all.click&vd_source=f901487b9c036e3f90d65db02b4483bd">找到一个魔改版的ollama可以调用amd 780M集成显卡，这样跑deepseek r1蒸馏模型应该轻松点_哔哩哔哩_bilibili</a></p>
<p><a href="https://www.bilibili.com/video/BV1ikNAezEdh/?spm_id_from=333.337.search-card.all.click&vd_source=f901487b9c036e3f90d65db02b4483bd">Ollama本地部署Deepseek调用AMD显卡（ROCm）_哔哩哔哩_bilibili</a></p>
<p><a href="https://www.bilibili.com/video/BV1eKPkeCEzi?spm_id_from=333.788.videopod.sections&vd_source=f901487b9c036e3f90d65db02b4483bd">UI界面丨 我用 chatbox 和大模型聊天_哔哩哔哩_bilibili</a></p>
<p><a href="https://qiuyedx.com/?p=2600">使用 Continue 插件在 VSCode 中提升开发效率：结合 DeepSeek 的实践指南 – 秋夜 の ブログ</a></p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>AI相关概念</title>
    <url>/2025/02/09/AI%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="AI相关概念解析"><a href="#AI相关概念解析" class="headerlink" title="AI相关概念解析"></a>AI相关概念解析</h1><h2 id="第一章：大语言模型（LLM）核心技术"><a href="#第一章：大语言模型（LLM）核心技术" class="headerlink" title="第一章：大语言模型（LLM）核心技术"></a>第一章：大语言模型（LLM）核心技术</h2><h3 id="1-1-核心定义与特性"><a href="#1-1-核心定义与特性" class="headerlink" title="1.1 核心定义与特性"></a>1.1 核心定义与特性</h3><ul>
<li><strong>定义</strong>: 基于深度学习的超大规模语言模型（参数规模达10^11~10^12量级）</li>
<li><strong>典型代表</strong>:<ul>
<li>GPT-3&#x2F;4（OpenAI）</li>
<li>PaLM（Google）</li>
<li>Llama（Meta）</li>
</ul>
</li>
<li><strong>三大核心特征</strong>：<ol>
<li><strong>大规模参数</strong>: 如GPT-3含1750亿参数</li>
<li><strong>海量训练数据</strong>: GPT-3训练数据包含数千亿单词</li>
<li><strong>算力密集型</strong>: 依赖GPU&#x2F;TPU集群进行训练</li>
</ol>
</li>
</ul>
<h3 id="1-2-Transformer架构"><a href="#1-2-Transformer架构" class="headerlink" title="1.2 Transformer架构"></a>1.2 Transformer架构</h3><ul>
<li><strong>核心创新</strong>:<ul>
<li><a href="#">自注意力机制</a>（Self-Attention）<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自注意力计算伪代码</span></span><br><span class="line">Q = query @ W_Q</span><br><span class="line">K = key @ W_K</span><br><span class="line">V = value @ W_V</span><br><span class="line">attention = softmax(Q @ K.T / sqrt(d_k)) @ V</span><br></pre></td></tr></table></figure></li>
<li><a href="#">并行计算优势</a>: 相较RNN显著提升训练速度</li>
<li>多层堆叠结构（编码器&#x2F;解码器）</li>
</ul>
</li>
<li><strong>演进路线</strong>:<br><code>Transformer → GPT → GPT-3/4</code>（仅用解码器架构）</li>
</ul>
<h3 id="1-3-Token"><a href="#1-3-Token" class="headerlink" title="1.3 Token"></a>1.3 Token</h3><h4 id="一、什么是-Token？"><a href="#一、什么是-Token？" class="headerlink" title="一、什么是 Token？"></a>一、什么是 Token？</h4><ol>
<li><p><strong>定义</strong></p>
<p>Token 可以是单词、子词（subword）、字符或符号。例如：</p>
<ul>
<li>英文中，单词 <code>&quot;unhappy&quot;</code> 可能被拆分为两个子词：<code>&quot;un&quot;</code> + <code>&quot;happy&quot;</code>。</li>
<li>中文中，<code>&quot;自然语言处理&quot;</code> 可能被拆分为单个字符（如 <code>&quot;自&quot;</code>, <code>&quot;然&quot;</code>, <code>&quot;语&quot;</code>…）或词语（如 <code>&quot;自然&quot;</code>, <code>&quot;语言&quot;</code>, <code>&quot;处理&quot;</code>）。</li>
</ul>
</li>
<li><p><strong>Tokenization（分词）</strong></p>
<p>将原始文本分割成 Token 的过程称为  <strong>Tokenization</strong> 。例如：</p>
<ul>
<li>英文句子 <code>&quot;I love AI!&quot;</code> → Tokens: <code>[&quot;I&quot;, &quot;love&quot;, &quot;AI&quot;, &quot;!&quot;]</code>。</li>
<li>中文句子 <code>&quot;你好，世界！&quot;</code> → Tokens: <code>[&quot;你&quot;, &quot;好&quot;, &quot;，&quot;, &quot;世&quot;, &quot;界&quot;, &quot;！&quot;]</code>（按字符拆分）。</li>
</ul>
</li>
</ol>
<hr>
<h4 id="二、为什么需要-Token？"><a href="#二、为什么需要-Token？" class="headerlink" title="二、为什么需要 Token？"></a>二、为什么需要 Token？</h4><ol>
<li><p><strong>模型的输入限制</strong></p>
<p>语言模型（如 GPT、LLaMA）有固定的  <strong>上下文窗口长度</strong> （例如 4k&#x2F;32k Tokens）。Token 的数量直接决定了模型能处理的文本长度。</p>
</li>
<li><p><strong>跨语言兼容性</strong></p>
<ul>
<li>英文等空格分隔的语言，通常以单词或子词为 Token。</li>
<li>中文、日文等无空格语言，常以字符或词语为 Token，这对模型处理不同语言更灵活。</li>
</ul>
</li>
<li><p><strong>效率与语义平衡</strong></p>
<ul>
<li>用单词作为 Token：语义明确，但词汇表过大（例如英文有百万级单词）。</li>
<li>用子词或字符作为 Token：词汇表小，能处理未知词汇（如 <code>&quot;ChatGPT&quot;</code> → <code>&quot;Chat&quot;</code> + <code>&quot;G&quot;</code> + <code>&quot;PT&quot;</code>）。</li>
</ul>
</li>
</ol>
<hr>
<h4 id="三、Token-如何影响模型？"><a href="#三、Token-如何影响模型？" class="headerlink" title="三、Token 如何影响模型？"></a>三、Token 如何影响模型？</h4><ol>
<li><p><strong>计算资源</strong></p>
<p>Token 数量直接影响模型的计算量和内存占用。例如，处理 1000 个 Token 比 100 个 Token 更耗资源。</p>
</li>
<li><p><strong>文本生成限制</strong></p>
<p>模型生成的文本长度通常以 Token 数衡量。例如，设置 <code>max_tokens=50</code> 表示模型最多输出 50 个 Token。</p>
</li>
<li><p><strong>分词差异</strong></p>
<p>不同模型使用不同的分词器（Tokenizer）：</p>
<ul>
<li><strong>英文</strong> ：GPT 系列用  <strong>Byte-Pair Encoding (BPE)</strong> ，BERT 用  <strong>WordPiece</strong> 。</li>
<li><strong>中文</strong> ：部分模型按字符分词，部分按词语分词（如 <code>&quot;清华大学&quot;</code> → <code>&quot;清华&quot;</code> + <code>&quot;大学&quot;</code>）。</li>
</ul>
</li>
</ol>
<hr>
<h4 id="四、实际应用示例"><a href="#四、实际应用示例" class="headerlink" title="四、实际应用示例"></a>四、实际应用示例</h4><ol>
<li><p><strong>输入输出长度</strong></p>
<p>一段 500 字的中文文章，按字符分词可能需要约  <strong>500-700 Tokens</strong> （标点、空格等占用额外 Token）。</p>
</li>
<li><p><strong>API 调用参数</strong></p>
<p>使用 OpenAI API 时，需注意 <code>max_tokens</code> 参数。例如，若输入已占 3800 Tokens（GPT-4 上限为 4096），则最多只能生成  <strong>296 个 Token</strong> 。</p>
</li>
<li><p><strong>分词工具测试</strong></p>
<p>可通过开源工具（如 <a href="https://platform.openai.com/tokenizer">OpenAI Tokenizer</a>）测试文本的 Token 拆分结果。</p>
</li>
</ol>
<hr>
<h4 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h4><ul>
<li>Token 是语言模型的“通用货币”，直接影响模型处理文本的能力。</li>
<li>分词方式因模型而异，同一段文本在不同模型中的 Token 数量可能不同。</li>
<li>理解 Token 有助于优化输入输出长度、控制 API 成本，并深入理解模型的工作原理。</li>
</ul>
<hr>
<h2 id="第二章：AI模型分类体系"><a href="#第二章：AI模型分类体系" class="headerlink" title="第二章：AI模型分类体系"></a>第二章：AI模型分类体系</h2><h3 id="2-1-分类维度"><a href="#2-1-分类维度" class="headerlink" title="2.1 分类维度"></a>2.1 分类维度</h3><table>
<thead>
<tr>
<th>分类依据</th>
<th>典型类别</th>
<th>技术特点差异</th>
</tr>
</thead>
<tbody><tr>
<td>功能目标</td>
<td>对话模型&#x2F;代码生成模型</td>
<td>任务目标与评估指标不同</td>
</tr>
<tr>
<td>数据模态</td>
<td>文本模型&#x2F;多模态模型</td>
<td>输入的预处理方式差异</td>
</tr>
<tr>
<td>部署形式</td>
<td>云端大模型&#x2F;端侧小模型</td>
<td>参数量与计算资源需求</td>
</tr>
</tbody></table>
<h3 id="2-2-典型模型详解"><a href="#2-2-典型模型详解" class="headerlink" title="2.2 典型模型详解"></a>2.2 典型模型详解</h3><h4 id="对话模型（Chat-Model）"><a href="#对话模型（Chat-Model）" class="headerlink" title="对话模型（Chat Model）"></a>对话模型（Chat Model）</h4><ul>
<li><strong>核心功能</strong>: 人机多轮自然对话</li>
<li><strong>关键技术</strong>:<ul>
<li>指令微调（Instruction Tuning）</li>
<li>RLHF对齐技术</li>
</ul>
</li>
<li><strong>应用案例</strong>:<blockquote>
<p>ChatGPT处理客服咨询：<br>用户：”订单未及时送达如何处理？”<br>系统检索物流政策→生成方案：”经查询，可为您申请运费补偿…”</p>
</blockquote>
</li>
</ul>
<h4 id="代码生成模型（Coder-Model）"><a href="#代码生成模型（Coder-Model）" class="headerlink" title="代码生成模型（Coder Model）"></a>代码生成模型（Coder Model）</h4><ul>
<li><strong>典型架构</strong>:<pre class="mermaid">  graph LR
  A[输入:自然语言描述] --> B[代码语法解析]
  B --> C[抽象语法树生成]
  C --> D[代码优化器]
  D --> E[输出:可执行代码]</pre></li>
<li><strong>开发工具链</strong>:<br>IDE插件 → GitHub Copilot → 自动代码补全</li>
</ul>
<h4 id="多模态模型"><a href="#多模态模型" class="headerlink" title="多模态模型"></a>多模态模型</h4><table>
<thead>
<tr>
<th>模态类型</th>
<th>典型模型</th>
<th>输入&#x2F;输出实例</th>
</tr>
</thead>
<tbody><tr>
<td>文本→图像</td>
<td>Stable Diffusion</td>
<td>“赛博朋克风格的机械猫” → 🖼️</td>
</tr>
<tr>
<td>音频→文本</td>
<td>Whisper</td>
<td>🎤语音输入 → 📝会议纪要</td>
</tr>
<tr>
<td>视频生成</td>
<td>Sora</td>
<td>“丛林瀑布场景” → 🎬30秒视频</td>
</tr>
</tbody></table>
<h4 id="嵌入模型（Embedding-Model）"><a href="#嵌入模型（Embedding-Model）" class="headerlink" title="嵌入模型（Embedding Model）"></a>嵌入模型（Embedding Model）</h4><ul>
<li><strong>定义</strong>：将文本&#x2F;图像转换为低维向量（即向量“嵌入”），用于语义理解。</li>
<li><strong>技术特点</strong>：<ul>
<li>向量编码保留了语义相似性（如“猫”和“狗”向量距离较近）。</li>
<li>通常作为下游任务的预处理工具（如检索、分类）。</li>
</ul>
</li>
<li><strong>例子</strong>：<ul>
<li><strong>text-embedding-3-small</strong>（OpenAI）：文本嵌入的高效模型。</li>
<li><strong>CLIP</strong>（OpenAI）：跨模态嵌入（图像与文本的联合向量空间）。</li>
</ul>
</li>
<li><strong>为什么需要</strong>：向量数据库搜索、推荐系统、知识图谱的构建基础。</li>
</ul>
<h2 id="第三章：检索增强生成（RAG）技术体系"><a href="#第三章：检索增强生成（RAG）技术体系" class="headerlink" title="第三章：检索增强生成（RAG）技术体系"></a>第三章：检索增强生成（RAG）技术体系</h2><h3 id="3-1-RAG-的定义"><a href="#3-1-RAG-的定义" class="headerlink" title="3.1 RAG 的定义"></a>3.1 RAG 的定义</h3><ul>
<li><p>是的，<strong>RAG是一个技术框架的名称</strong>，代表“大模型（LLM）+ 知识库（向量索引）的协作模式”。但需注意几点细节：</p>
<p>-<strong>知识库未必完全由用户私有数据构成</strong>：例如，你可以结合通用知识库（如维基百科向量化）和私有数据。</p>
<p>-<strong>嵌模型的作用是转化，但非“让AI理解”</strong>：向量化的本质是将文本映射到高维空间，相似语义的文本向量距离更近，从而支持快速检索。模型本身仍然需要理解上下文。</p>
</li>
</ul>
<h3 id="3-2-流程拆解"><a href="#3-2-流程拆解" class="headerlink" title="3.2 流程拆解"></a>3.2 流程拆解</h3><p>RAG 的核心是将<strong>用户私有知识</strong>与<strong>大模型通用能力</strong>结合，具体步骤如下：</p>
<p>1.<strong>数据准备（用户专业知识）</strong>：</p>
<ul>
<li>原始形式：PDF、TXT、数据库记录、网页内容等（例如企业内部的合同、产品手册）。</li>
</ul>
<p>2.<strong>数据转化</strong>：</p>
<ul>
<li>用<strong>嵌入模型（Embedding Model）</strong>将文本转化为<strong>向量（Vector）</strong>，而不是某种“AI方便理解的数据”（更准确的说法是：向量是机器学习模型能够高效处理的高维数学表示）。</li>
</ul>
<p>3.<strong>存储为知识库</strong>：</p>
<ul>
<li>向量存入<strong>向量数据库</strong>（如Chroma、Pinecone），并保留原始文本的映射关系。这被称为“知识库”，但更技术化的术语是<strong>向量索引（Vector Index）</strong>。</li>
</ul>
<p>4.<strong>检索与生成</strong>：</p>
<ul>
<li>用户提问时，RAG 框架将问题转化为向量 → 从向量数据库检索相似内容 → 将检索到的文本作为上下文输入大模型（如 GPT-4）→ 生成最终回答。</li>
</ul>
<h3 id="3-3RAG-运作流程图解"><a href="#3-3RAG-运作流程图解" class="headerlink" title="3.3RAG 运作流程图解"></a>3.3RAG 运作流程图解</h3><pre class="mermaid">
graph TD

    A[用户问题] --> B[问题向量化<br/>嵌入模型处理]

    B --> C{向量数据库检索}

    C -->|相似度 > 阈值| D[召回匹配文本片段]

    C -->|无匹配结果| E[触发失败处理]

    D --> F[构造上下文 Prompt]

    F --> G[大模型生成答案]

    E --> H[基于大模型原生知识生成]

    G --> I[最终回答]

    H --> I</pre>

<hr>
<h3 id="3-4流程分步详解"><a href="#3-4流程分步详解" class="headerlink" title="3.4流程分步详解"></a>3.4流程分步详解</h3><h4 id="1-用户问题向量化"><a href="#1-用户问题向量化" class="headerlink" title="1. 用户问题向量化"></a>1. 用户问题向量化</h4><p>*<strong>技术实现</strong> ：</p>
<p>  使用嵌入模型（如 OpenAI 的 <code>text-embedding-3-small</code>）将问题文本转化为 <strong>高维向量</strong> 。</p>
<p>  示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">问题：“如何重置密码？” → 向量 = [0.23, -0.45, 1.2, ..., 1536维]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>*<strong>关键细节</strong> ：</p>
<ul>
<li>向量维度由模型决定（如 OpenAI 默认 1536 维）。</li>
<li>语义相似的文本向量在空间中距离更近（余弦相似度高）。</li>
</ul>
<h4 id="2-向量数据库匹配"><a href="#2-向量数据库匹配" class="headerlink" title="2. 向量数据库匹配"></a>2. 向量数据库匹配</h4><p>*<strong>匹配逻辑</strong> ：</p>
<ul>
<li>计算问题向量与知识库中所有向量的 <strong>余弦相似度</strong> 。</li>
<li>按相似度从高到低返回 Top K 个结果（如 K&#x3D;3）。</li>
</ul>
<p>*<strong>阈值控制（可选）</strong> ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">if 最高相似度 &lt; 阈值（如 0.7）→ 视为“未匹配到知识库内容”  </span><br><span class="line"></span><br><span class="line">else → 使用检索到的文本  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-匹配成功：基于知识库回答"><a href="#3-匹配成功：基于知识库回答" class="headerlink" title="3. 匹配成功：基于知识库回答"></a>3. 匹配成功：基于知识库回答</h4><ul>
<li><p><strong>上下文构造</strong> ：</p>
<p>将检索到的文本片段插入 Prompt，引导大模型基于此生成答案。</p>
<p>示例 Prompt：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;spanclass=&quot;line&quot;&gt;&lt;span&gt;【检索到的内容】：&quot;用户可在设置页面的‘账户安全’中选择‘忘记密码’，系统将发送重置链接至注册邮箱。&quot;  &lt;/span&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;spanclass=&quot;line&quot;&gt;&lt;span&gt;问题：如何重置密码？  &lt;/span&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;spanclass=&quot;line&quot;&gt;&lt;span&gt;答案：  &lt;/span&gt;&lt;/span&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>输出约束</strong> ：</li>
</ul>
<p>大模型 <strong>必须优先依赖检索到的内容</strong> ，即使其自身知识库中存在不同答案。</p>
<h4 id="4-匹配失败：大模型自主回答"><a href="#4-匹配失败：大模型自主回答" class="headerlink" title="4. 匹配失败：大模型自主回答"></a>4. 匹配失败：大模型自主回答</h4><p>*<strong>风险点</strong> ：</p>
<ul>
<li>模型可能因知识截止（如 GPT-4 知识止于 2023年4月）给出过时信息。</li>
</ul>
<p>*<strong>幻觉风险</strong> ：对未知领域问题编造不合理答案（如虚构产品功能）。</p>
<p>*<strong>缓解策略</strong> ：</p>
<ol>
<li><p>显式声明来源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（检测到无相关文档）→ 回答前标注：“根据通用知识，可能存在偏差...”  </span><br></pre></td></tr></table></figure></li>
<li><p>拒绝回答：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“抱歉，我的知识库暂未收录此问题的相关信息。”  </span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="3-5类比"><a href="#3-5类比" class="headerlink" title="3.5类比"></a>3.5类比</h3><h4 id="律师-手册"><a href="#律师-手册" class="headerlink" title="律师 + 手册"></a>律师 + 手册</h4><p>想象你是一名律师，处理案件时需要：</p>
<ul>
<li><strong>知识库</strong> &#x3D; 法律条文手册（你预先准备的参考资料）。</li>
<li><strong>检索</strong> &#x3D; 根据案情快速翻到相关法条目录。</li>
<li><strong>生成</strong> &#x3D; 结合法律条文和案情分析，写出辩护词。<br>在这个过程中，法律条文手册是“知识库”，你的翻查动作是“检索”，最终的辩护词是“大模型生成”。</li>
</ul>
<h4 id="菜鸟厨师-食材检索系统"><a href="#菜鸟厨师-食材检索系统" class="headerlink" title="菜鸟厨师 + 食材检索系统"></a>菜鸟厨师 + 食材检索系统</h4><ul>
<li>大模型 → <strong>厨艺新手</strong>：能按步骤做菜，但不知道特定食材在哪。</li>
<li>知识库 → <strong>智能食材柜</strong>：通过扫描菜名自动弹出相关原料（如输入“宫保鸡丁” → 提供花生、鸡肉、辣椒）。</li>
<li>RAG → <strong>全流程</strong>：<code>&lt;br&gt;</code> 用户要“做宫保鸡丁” → 厨师自己不会备菜，必须从食材柜中拿指定原料 → 结合菜谱书（模型的知识）完成烹饪。</li>
</ul>
<h4 id="客服专员-知识库搜索引擎"><a href="#客服专员-知识库搜索引擎" class="headerlink" title="客服专员 + 知识库搜索引擎"></a>客服专员 + 知识库搜索引擎</h4><ul>
<li>大模型 → <strong>普通客服人员</strong>：受过基础培训，但没看过公司内部文档。</li>
<li>知识库 → <strong>内部文档系统</strong>：输入用户问题后自动高亮相关文档片段。</li>
<li>RAG → <strong>操作流程</strong>：<code>&lt;br&gt;</code> 用户问“退货政策是什么？” → 客服打开文档系统，检索出最新条款 → 根据条款原文整理成回答告知用户。</li>
</ul>
<h3 id="3-5常见的误解修正"><a href="#3-5常见的误解修正" class="headerlink" title="3.5常见的误解修正"></a>3.5常见的误解修正</h3><h4 id="误解-1：“嵌入模型直接将知识传授给-AI”"><a href="#误解-1：“嵌入模型直接将知识传授给-AI”" class="headerlink" title="误解 1：“嵌入模型直接将知识传授给 AI”"></a><strong>误解 1</strong>：“嵌入模型直接将知识传授给 AI”</h4><ul>
<li>❌ <strong>错误点</strong>：嵌入模型仅负责将文本转化为向量，<strong>不修改大模型（如 GPT-4）的原始知识</strong>，仅通过检索机制动态注入上下文。</li>
<li>✅ <strong>正确理解</strong>：RAG 通过上下文增强，但大模型本身的知识未改变（对比微调才会修改模型参数）。</li>
</ul>
<h4 id="误解-2：“知识库是某种特殊数据结构”"><a href="#误解-2：“知识库是某种特殊数据结构”" class="headerlink" title="误解 2：“知识库是某种特殊数据结构”"></a><strong>误解 2</strong>：“知识库是某种特殊数据结构”</h4><ul>
<li>❌ <strong>错误点</strong>：知识库本质上是一个<strong>索引系统</strong>，包含向量和原始文本的对应关系，技术上可能是一个数据库表或文件。</li>
<li>✅ <strong>正确理解</strong>：知识库的构建流程如下：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始文本 → 分块（Chunking）→ 向量化 → 存储在向量数据库（如：&#123;向量, 文本, 元数据&#125;）</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="误解-3：“RAG-只是把数据灌给模型”"><a href="#误解-3：“RAG-只是把数据灌给模型”" class="headerlink" title="误解 3：“RAG 只是把数据灌给模型”"></a><strong>误解 3</strong>：“RAG 只是把数据灌给模型”</h4><ul>
<li>✅ <strong>技术本质</strong>：RAG 的意义在于解决大模型的以下问题：<ol>
<li><strong>知识截止（Cut-off Date）</strong>：大模型的知识停留在训练时间（如 GPT-4 知识截止到 2023年4月）。</li>
<li><strong>隐私与安全</strong>：直接微调可能泄露敏感数据，而 RAG 通过检索权限控制数据可见性。</li>
<li><strong>成本效率</strong>：动态检索比微调更灵活，无需重新训练模型。</li>
</ol>
</li>
</ul>
<h4 id="偏差点-1：大模型的“主动性”问题"><a href="#偏差点-1：大模型的“主动性”问题" class="headerlink" title="偏差点 1：大模型的“主动性”问题"></a><strong>偏差点 1：大模型的“主动性”问题</strong></h4><ul>
<li>❌ 误解：大模型像人脑一样主动思考。</li>
<li>✅ 纠正：大模型在 RAG 中是<strong>被动执行者</strong>，必须严格基于检索结果生成内容。例如：<ul>
<li>若检索到错误内容，模型可能生成错误答案（尽管自身知识正确）。</li>
<li>若检索无结果，模型只能依赖自身知识回答（可能导致幻觉）。</li>
</ul>
</li>
</ul>
<h4 id="偏差点-2：知识库的检索精度"><a href="#偏差点-2：知识库的检索精度" class="headerlink" title="偏差点 2：知识库的检索精度"></a><strong>偏差点 2：知识库的检索精度</strong></h4><ul>
<li>❌ 误解：像查手册一样“人工翻阅找到相关内容”。</li>
<li>✅ 纠正：RAG 检索依赖<strong>数学计算的语义匹配</strong>，而非人工逻辑。<ul>
<li><strong>极端案例</strong>：用户问“如何治疗流感？” → 若知识库中存在“禽流感疫苗研发文档”且语义向量接近，可能被错误检索。</li>
</ul>
</li>
</ul>
<h4 id="偏差点-3：RAG-的可靠性边界"><a href="#偏差点-3：RAG-的可靠性边界" class="headerlink" title="偏差点 3：RAG 的可靠性边界"></a><strong>偏差点 3：RAG 的可靠性边界</strong></h4><ul>
<li>❌ 误解：只要用了 RAG，答案一定准确。</li>
<li>✅ 现实：RAG 的效果取决于三大因素：<ol>
<li><strong>嵌入模型质量</strong>：差的模型无法正确向量化文本（如“汽车”和“轮胎”可能被误判为无关）。</li>
<li><strong>检索策略</strong>：分块（Chunking）大小、是否过滤元数据（如文档更新时间）。</li>
<li><strong>大模型的上下文理解能力</strong>：模型能否正确利用检索到的文本。</li>
</ol>
</li>
</ul>
<h3 id="3-6总结"><a href="#3-6总结" class="headerlink" title="3.6总结"></a>3.6总结</h3><p>如何记住 RAG 的本质？<br>用三个关键词代替比喻：</p>
<ol>
<li><strong>动态缝合</strong>（Stitching） → 将外部知识“缝”进模型的上下文窗口。</li>
<li><strong>数学驱动</strong>（Vector Math） → 检索靠向量相似度计算，非人类逻辑。</li>
<li><strong>上下文约束</strong>（Constrained Generation） → 模型输出被检索内容严格限制。</li>
</ol>
<h2 id="第四章Prompt（提示提示词）"><a href="#第四章Prompt（提示提示词）" class="headerlink" title="第四章Prompt（提示提示词）"></a>第四章Prompt（提示提示词）</h2><p>在大型语言模型（LLM）中，<strong>prompt（提示词）</strong> 是用户与模型交互的核心工具，其作用可以总结为以下几点：</p>
<hr>
<h3 id="4-1-定义任务目标"><a href="#4-1-定义任务目标" class="headerlink" title="4.1 定义任务目标"></a>4.1 <strong>定义任务目标</strong></h3><ul>
<li><strong>作用</strong>：Prompt 是用户向模型传达意图的桥梁，明确告诉模型“需要完成什么任务”。</li>
<li><strong>示例</strong>：<ul>
<li>模糊的提问：“关于气候变化。”<br>→ 模型可能输出泛泛而谈的内容。</li>
<li>明确的指令：“用500字总结气候变化的成因、影响和解决方案。”<br>→ 模型生成结构化、针对性强的回答。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-2-控制输出风格与格式"><a href="#4-2-控制输出风格与格式" class="headerlink" title="4.2 控制输出风格与格式"></a>4.2 <strong>控制输出风格与格式</strong></h3><ul>
<li><strong>作用</strong>：通过 Prompt 指定输出形式（如代码、诗歌、报告）、语气（专业、幽默）或结构（列表、表格、JSON）。</li>
<li><strong>示例</strong>：<ul>
<li>“用莎士比亚的风格写一首关于咖啡的十四行诗。”</li>
<li>“将以下数据转换为Markdown表格：…”</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-3-提供上下文与约束"><a href="#4-3-提供上下文与约束" class="headerlink" title="4.3 提供上下文与约束"></a>4.3 <strong>提供上下文与约束</strong></h3><ul>
<li><strong>作用</strong>：补充背景信息或限制条件，缩小模型生成范围，避免无关或错误内容。</li>
<li><strong>示例</strong>：<ul>
<li>“假设你是一名医生，如何解释高血压的成因？”<br>→ 模型会代入角色，生成符合医学知识的回答。</li>
<li>“仅用小学生能理解的词汇解释量子力学。”</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-4-激活特定知识或能力"><a href="#4-4-激活特定知识或能力" class="headerlink" title="4.4 激活特定知识或能力"></a>4.4 <strong>激活特定知识或能力</strong></h3><ul>
<li><strong>作用</strong>：LLM 具备海量知识，但需要 Prompt 明确调用特定领域或技能。</li>
<li><strong>示例</strong>：<ul>
<li>数学推理：“分步骤解答：鸡兔同笼问题，共有头10个，脚28只。”</li>
<li>代码生成：“用Python写一个快速排序算法，并添加注释。”</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-5-纠正偏差与安全对齐"><a href="#4-5-纠正偏差与安全对齐" class="headerlink" title="4.5 纠正偏差与安全对齐"></a>4.5 <strong>纠正偏差与安全对齐</strong></h3><ul>
<li><strong>作用</strong>：通过 Prompt 引导模型遵守伦理规范，避免有害、偏见或虚构内容。</li>
<li><strong>示例</strong>：<ul>
<li>“基于权威科学来源，回答地球是否平。”<br>→ 限制模型输出科学共识，而非伪科学观点。</li>
<li>“以中立态度比较不同政治制度的优缺点。”</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-6-提升效率（Few-shot-Learning）"><a href="#4-6-提升效率（Few-shot-Learning）" class="headerlink" title="4.6 提升效率（Few-shot Learning）"></a>4.6 <strong>提升效率（Few-shot Learning）</strong></h3><ul>
<li><strong>作用</strong>：在 Prompt 中提供示例（Few-shot），显著提升模型在复杂任务中的表现。</li>
<li><strong>示例</strong>：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">任务：将中文俚语翻译成英文，并解释含义。</span><br><span class="line">示例：</span><br><span class="line">输入：躺平</span><br><span class="line">输出：Lie flat. 含义：指拒绝过度竞争，选择低欲望的生活方式。</span><br><span class="line">输入：内卷</span><br><span class="line">输出：...</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h3 id="4-7-动态调整模型行为"><a href="#4-7-动态调整模型行为" class="headerlink" title="4.7 动态调整模型行为"></a>4.7 <strong>动态调整模型行为</strong></h3><ul>
<li><strong>作用</strong>：通过修改 Prompt 调整模型的“性格”或交互模式（如严谨&#x2F;创意模式）。</li>
<li><strong>示例</strong>：<ul>
<li>“你是一个严格的历史学家，只回答有文献证据支持的内容。”</li>
<li>“用比喻和故事解释相对论。”</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-8-关键挑战与优化"><a href="#4-8-关键挑战与优化" class="headerlink" title="4.8 关键挑战与优化"></a>4.8 关键挑战与优化</h3><ul>
<li><strong>Prompt Engineering</strong>：设计高质量 Prompt 需要技巧，例如：<ul>
<li>明确性（避免歧义）</li>
<li>结构化（分步骤、分条件）</li>
<li>测试迭代（根据输出调整表述）。</li>
</ul>
</li>
<li><strong>局限性</strong>：过度依赖 Prompt 可能导致“幻觉”（虚构事实）或格式错误，需结合模型微调或外部验证。</li>
</ul>
<hr>
<h3 id="4-9-总结"><a href="#4-9-总结" class="headerlink" title="4.9 总结"></a>4.9 总结</h3><p>Prompt 是用户“编程”LLM 的核心工具，通过自然语言指令调动模型的知识、推理和生成能力。其设计直接影响输出的质量、准确性和适用性，因此 <strong>Prompt Engineering（提示词工程）</strong> 已成为高效使用 LLM 的关键技能。</p>
<h2 id="第五章AI-Agent（人工智能代理）"><a href="#第五章AI-Agent（人工智能代理）" class="headerlink" title="第五章AI Agent（人工智能代理）"></a>第五章AI Agent（人工智能代理）</h2><h3 id="5-1-AI-Agent的定义与核心特性"><a href="#5-1-AI-Agent的定义与核心特性" class="headerlink" title="5.1 AI Agent的定义与核心特性"></a><strong>5.1 AI Agent的定义与核心特性</strong></h3><p><strong>AI Agent</strong> 是指能够<strong>自主感知环境、分析信息、制定决策并采取行动</strong>以实现特定目标的人工智能实体。它不局限于单一任务，而是通过与环境互动持续优化行为，具备一定程度的自主性和适应性。</p>
<p><strong>个人理解：</strong></p>
<blockquote>
<p>是 基于LLM 和一些工具箱 ，给LLM 输出格式进行限制 然后程序对这个格式进行解析调用相关的工具将输出再给LLM这样一步步最终得到想要的结果</p>
</blockquote>
<hr>
<h3 id="5-2-核心流程概览"><a href="#5-2-核心流程概览" class="headerlink" title="5.2 核心流程概览"></a><strong>5.2 核心流程概览</strong></h3><pre class="mermaid">graph LR
A[用户输入] --> B{LLM} 
B -->|结构化指令| C[程序解析]
C -->|调用工具| D[工具箱]
D -->|工具结果| B
B -->|最终输出| E[用户]</pre>

<ol>
<li><p><strong>输入与格式约束</strong></p>
<ul>
<li><strong>Prompt设计</strong>：通过 <strong>结构化指令模板</strong>（如JSON、XML或自定义标记）限制LLM输出格式。<br><em>例</em>：<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;请按以下格式回复：&#123; &#x27;action&#x27;: &#x27;search&#x27;, &#x27;query&#x27;: &#x27;关键词&#x27; &#125;&quot;</span> </span><br></pre></td></tr></table></figure></li>
<li><strong>输出标准化</strong>：确保LLM返回的指令可被程序解析（如避免自然语言描述，强制字段必填）。</li>
</ul>
</li>
<li><p><strong>工具解析与调用</strong></p>
<ul>
<li><strong>程序解析模块</strong>：提取LLM输出中的动作指令（如 <code>action</code>字段）和参数（如 <code>query</code>）。</li>
<li><strong>工具映射</strong>：根据动作指令匹配预定义的工具函数（如 <code>search</code>→联网搜索API）。</li>
</ul>
</li>
<li><p><strong>结果反馈与迭代</strong></p>
<ul>
<li><strong>工具执行结果</strong>：将工具返回的数据（如搜索结果、数据库信息）重新输入LLM。</li>
<li><strong>多轮交互</strong>：LLM可能需多次调用工具，直到满足终止条件（如用户问题解决）。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="5-3-AI-Agent-的核心组成部分"><a href="#5-3-AI-Agent-的核心组成部分" class="headerlink" title="5.3 AI Agent 的核心组成部分"></a><strong>5.3 AI Agent 的核心组成部分</strong></h3><ol>
<li><p><strong>感知（Perception）</strong></p>
<ul>
<li>通过传感器、数据输入或用户交互（如文字、图像、语音）获取环境信息。</li>
<li><strong>示例</strong>：自动驾驶汽车通过摄像头和雷达感知路况。</li>
</ul>
</li>
<li><p><strong>决策（Decision-Making）</strong></p>
<ul>
<li>基于感知信息，利用算法（规则引擎、机器学习模型等）分析并生成行动策略。</li>
<li><strong>示例</strong>：电商推荐系统根据用户行为数据决定推送哪些商品。</li>
</ul>
</li>
<li><p><strong>执行（Action）</strong></p>
<ul>
<li>将决策转化为实际动作，可能包括物理操作（如机器人移动）或数字输出（如生成文本）。</li>
<li><strong>示例</strong>：聊天机器人根据对话内容生成回复。</li>
</ul>
</li>
<li><p><strong>学习与适应（Learning）</strong></p>
<ul>
<li>通过反馈（如用户评价、环境变化）优化模型，提升长期表现。</li>
<li><strong>示例</strong>：游戏AI通过强化学习不断改进策略以击败对手。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="5-4-AI-Agent-的分类"><a href="#5-4-AI-Agent-的分类" class="headerlink" title="5.4 AI Agent 的分类"></a><strong>5.4 AI Agent 的分类</strong></h3><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>特点</strong></th>
<th><strong>示例</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>反应式 Agent</strong></td>
<td>仅根据当前输入即时响应，无长期记忆或目标。</td>
<td>温度传感器触发空调开关。</td>
</tr>
<tr>
<td><strong>基于目标的 Agent</strong></td>
<td>围绕预设目标规划行动，权衡短期与长期收益。</td>
<td>物流调度系统优化配送路线。</td>
</tr>
<tr>
<td><strong>基于效用的 Agent</strong></td>
<td>引入“效用函数”评估不同行动的价值，选择最优解。</td>
<td>金融交易Agent最大化投资收益。</td>
</tr>
<tr>
<td><strong>学习型 Agent</strong></td>
<td>通过数据或交互经验动态调整策略（如强化学习）。</td>
<td>AlphaGo 自我对弈提升棋艺。</td>
</tr>
<tr>
<td><strong>多 Agent 系统</strong></td>
<td>多个Agent协作或竞争，通过通信和博弈实现复杂目标。</td>
<td>自动驾驶车辆协同避免交通拥堵。</td>
</tr>
</tbody></table>
<hr>
<h3 id="5-5-AI-Agent-的典型应用场景"><a href="#5-5-AI-Agent-的典型应用场景" class="headerlink" title="5.5 AI Agent 的典型应用场景"></a><strong>5.5 AI Agent 的典型应用场景</strong></h3><ol>
<li><p><strong>自动驾驶</strong></p>
<ul>
<li>感知路况→规划路径→控制车辆，实现安全驾驶。</li>
</ul>
</li>
<li><p><strong>智能助手</strong></p>
<ul>
<li>理解用户需求→调用API（如查天气、订机票）→返回结果（如Siri、Copilot）。</li>
</ul>
</li>
<li><p><strong>工业自动化</strong></p>
<ul>
<li>机器人通过视觉识别零件→调整动作完成装配。</li>
</ul>
</li>
<li><p><strong>游戏与虚拟世界</strong></p>
<ul>
<li>NPC根据玩家行为动态调整剧情或战斗策略（如《荒野大镖客2》中的AI角色）。</li>
</ul>
</li>
<li><p><strong>医疗诊断</strong></p>
<ul>
<li>分析患者数据→生成诊疗建议→跟踪疗效并调整方案。</li>
</ul>
</li>
</ol>
<hr>
<h3 id="5-6-AI-Agent-与LLM的关系"><a href="#5-6-AI-Agent-与LLM的关系" class="headerlink" title="5.6 AI Agent 与LLM的关系"></a><strong>5.6 AI Agent 与LLM的关系</strong></h3><ul>
<li><strong>LLM作为“大脑”</strong>：大语言模型（如GPT-4）常被集成到Agent中，负责语言理解、推理和生成。</li>
<li><strong>增强自主性</strong>：通过Prompt工程或工具调用（Tools），LLM可驱动Agent完成复杂任务链（如联网搜索→分析→生成报告）。</li>
<li><strong>局限性</strong>：LLM的“幻觉”问题可能导致Agent决策错误，需结合外部知识库或验证机制。</li>
</ul>
<hr>
<h3 id="5-7-总结"><a href="#5-7-总结" class="headerlink" title="5.7 总结"></a><strong>5.7 总结</strong></h3><p>现代LLM Agent的核心架构:通过 <strong>结构化输出限制→程序化工具调用→循环迭代</strong>，LLM得以突破纯文本生成的局限，成为真正的“行动者”。未来随着 <strong>工具学习（Tool Learning）</strong> 和 <strong>程序合成（Program Synthesis）</strong> 的进步，这类Agent将能处理更复杂的跨模态任务（如调用机器人执行物理动作）。</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>Echarts功能实现</title>
    <url>/2024/11/07/Echarts%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="鼠标所在折线的信息进行展示"><a href="#鼠标所在折线的信息进行展示" class="headerlink" title="鼠标所在折线的信息进行展示"></a>鼠标所在折线的信息进行展示</h2><blockquote>
<p>实现思路<br>1、axisPointer来获取当前鼠标所在的位置的值，并且将其保存<br>2、formatter比较每一个series的值找到离其最近的进行高亮显示</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">varmouseCurValue;</span><br><span class="line"><span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">            <span class="attr">axisPointer</span>: &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&quot;cross&quot;</span>,</span><br><span class="line">                <span class="attr">label</span>: &#123;</span><br><span class="line">                    <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (params.<span class="property">seriesData</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">                            mouseCurValue = params.<span class="property">value</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">                varres = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                varallRes = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                varminDiff = <span class="title class_">Infinity</span>;</span><br><span class="line">                varminDiffIndex = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (vari = <span class="number">0</span>; i &lt; params.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                    varseries = params[i];</span><br><span class="line">                    varv = <span class="title class_">Number</span>(series.<span class="property">value</span>);</span><br><span class="line">                    vardiff = <span class="title class_">Math</span>.<span class="title function_">abs</span>(v - mouseCurValue);</span><br><span class="line">                    <span class="keyword">if</span> (diff &lt; minDiff) &#123;</span><br><span class="line">                        minDiff = diff;</span><br><span class="line">                        minDiffIndex = i;</span><br><span class="line">                    &#125;</span><br><span class="line">                    allRes += series.<span class="property">marker</span> + <span class="string">&quot; &quot;</span> + series.<span class="property">seriesName</span> + <span class="string">&quot;：&quot;</span> + series.<span class="property">value</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                varselItem = params[minDiffIndex];</span><br><span class="line">                <span class="keyword">if</span> (params.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    res += params[<span class="number">0</span>].<span class="property">axisValue</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span> + <span class="string">&quot;&lt;div style=&#x27;width:100%;height:5px;&#x27;&gt;&lt;/div&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (selItem)</span><br><span class="line">                    res += selItem.<span class="property">marker</span> + <span class="string">&quot;&lt;strong&gt;&lt;u&gt;&quot;</span> + selItem.<span class="property">seriesName</span> + <span class="string">&quot;&lt;/u&gt;&lt;/strong&gt;&quot;</span> + <span class="string">&quot;:&quot;</span> + selItem.<span class="property">value</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span> + <span class="string">&quot;&lt;div style=&#x27;width:100%;height:5px;&#x27;&gt;&lt;/div&gt;&quot;</span>;</span><br><span class="line">                    res += allRes;</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="category轴设置间隔"><a href="#category轴设置间隔" class="headerlink" title="category轴设置间隔"></a>category轴设置间隔</h2><blockquote>
<p>xAxis下直接设置interval不生效，对于category类型 需要在axisLabel下设置interval</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">XLabelFormatDict</span> = &#123;</span><br><span class="line">        <span class="string">&quot;day&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;时&quot;</span>,</span><br><span class="line">            <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                <span class="attr">interval</span>: <span class="number">3</span>,</span><br><span class="line">                <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">value, index</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">parseInt</span>(index / <span class="number">4</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;week&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                <span class="attr">interval</span>: <span class="number">95</span>,</span><br><span class="line">                <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">value, index</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index % <span class="number">96</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="title function_">getWeekText</span>(<span class="built_in">parseInt</span>(index / <span class="number">96</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;month&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;天&quot;</span>, <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                <span class="attr">interval</span>: <span class="number">95</span>,</span><br><span class="line">                <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">value, index</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index % <span class="number">96</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">parseInt</span>(index / <span class="number">96</span>) + <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="format-tooltip格式化后每一项前面的标记"><a href="#format-tooltip格式化后每一项前面的标记" class="headerlink" title="format tooltip格式化后每一项前面的标记"></a>format tooltip格式化后每一项前面的标记</h2><p><code>parames.mark</code> 对象会被渲染成标记</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Echarts</tag>
        <tag>功能片段</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Echarts配置生成</title>
    <url>/2024/10/16/Echarts%E9%85%8D%E7%BD%AE%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>项目中常遇见的问题在于，echarts的封装跟不上需求的多变性</p>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><blockquote>
<p>实现最大程度的复用并且提供最大程度的灵活性</p>
</blockquote>
<span id="more"></span>

<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>1、要尽可能简单的使用就要使用尽可能少的配置</p>
<p>2、要有适用性就需要以Echarts的文档为准绳，尽可能的不使用自定义语法</p>
<p>3、对于echarts能实现的功能都应该支持</p>
<p>4、最终获取的都是一份配置项所以可以学习echarts的方法向传入的配置项添加默认值，有自定义的参数就覆盖掉默认值即可</p>
<h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><blockquote>
<p>提供一份option模板，将传入的配置和这个模板进行合并,传入的配置如果有值的用自己的，没有的使用模板的。</p>
<p>option.value &#x3D;配置.value  ? 配置.value : 模板.value</p>
</blockquote>
<h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GenerateChart</span> = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attr">isObject</span>: <span class="function">(<span class="params">obj</span>) =&gt;</span> obj !== <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> obj === <span class="string">&#x27;object&#x27;</span> &amp;&amp; !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj),</span><br><span class="line">    <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params">obj, map = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.<span class="title function_">has</span>(obj)) <span class="keyword">return</span> map.<span class="title function_">get</span>(obj);</span><br><span class="line">            <span class="keyword">let</span> cloneObj = [];</span><br><span class="line">            map.<span class="title function_">set</span>(obj, cloneObj);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                cloneObj[i] = <span class="variable language_">this</span>.<span class="title function_">clone</span>(obj[i], map);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> cloneObj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> obj === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> obj; <span class="comment">// 或者使用其他方法克隆函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isObject</span>(obj)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.<span class="title function_">has</span>(obj)) <span class="keyword">return</span> map.<span class="title function_">get</span>(obj);</span><br><span class="line">            <span class="keyword">let</span> cloneObj = &#123;&#125;;</span><br><span class="line">            map.<span class="title function_">set</span>(obj, cloneObj);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">                <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(k)) &#123;</span><br><span class="line">                    cloneObj[k] = <span class="variable language_">this</span>.<span class="title function_">clone</span>(obj[k], map);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> cloneObj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">deepMerge</span>: <span class="keyword">function</span> (<span class="params">target, source, visited = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">            <span class="keyword">if</span> (source.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isObject</span>(source[key])) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (visited.<span class="title function_">has</span>(source[key])) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>; <span class="comment">// 避免循环引用</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    visited.<span class="title function_">set</span>(source[key], <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!target[key] || !<span class="variable language_">this</span>.<span class="title function_">isObject</span>(target[key])) &#123;</span><br><span class="line">                        target[key] = &#123;&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(target[key], source[key], visited);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    target[key] = source[key];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">getBaseOption</span>: <span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">isObject</span>(config)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;配置必须是对象&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">noDataTemplate</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> option = <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(<span class="variable language_">this</span>.<span class="title function_">clone</span>(<span class="variable language_">this</span>.<span class="property">baseTemplate</span>), config);</span><br><span class="line">        option.<span class="property">xAxis</span> = <span class="variable language_">this</span>.<span class="title function_">mergeAxes</span>(option.<span class="property">xAxis</span>);</span><br><span class="line">        option.<span class="property">yAxis</span> = <span class="variable language_">this</span>.<span class="title function_">mergeAxes</span>(option.<span class="property">yAxis</span>);</span><br><span class="line">        <span class="keyword">return</span> option;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">mergeAxes</span>: <span class="keyword">function</span> (<span class="params">axes</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(axes)) &#123;</span><br><span class="line">            <span class="keyword">return</span> axes.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">mergeAxis</span>(item));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">mergeAxis</span>(axes);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">mergeAxis</span>: <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">isObject</span>(item)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;坐标轴配置必须是对象&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (item.<span class="property">type</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;category&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(<span class="variable language_">this</span>.<span class="title function_">clone</span>(<span class="variable language_">this</span>.<span class="property">categoryAxisTemplate</span>), item);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;value&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(<span class="variable language_">this</span>.<span class="title function_">clone</span>(<span class="variable language_">this</span>.<span class="property">valueAxisTemplate</span>), item);</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;未知的坐标轴类型&quot;</span>, item);</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(<span class="variable language_">this</span>.<span class="title function_">clone</span>(<span class="variable language_">this</span>.<span class="property">valueAxisTemplate</span>), item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">getOption</span>: <span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> option = <span class="variable language_">this</span>.<span class="title function_">getBaseOption</span>(config);</span><br><span class="line">        <span class="keyword">var</span> seriesConfig = option.<span class="property">series</span>;</span><br><span class="line">        <span class="keyword">var</span> series = [];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(seriesConfig)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;series配置必须是数组&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">noDataTemplate</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        seriesConfig.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> type = item.<span class="property">type</span> || <span class="string">&quot;line&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> templateKey = <span class="variable language_">this</span>.<span class="property">typeMapTemplate</span>[type];</span><br><span class="line">            <span class="keyword">if</span> (templateKey) &#123;</span><br><span class="line">                <span class="keyword">var</span> template = <span class="variable language_">this</span>[templateKey];</span><br><span class="line">                series.<span class="title function_">push</span>(</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(<span class="variable language_">this</span>.<span class="title function_">clone</span>(template), item)</span><br><span class="line">                );</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                series.<span class="title function_">push</span>(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (series.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">noDataTemplate</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        option.<span class="property">series</span> = series;</span><br><span class="line">        <span class="keyword">return</span> option;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">baseTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">legend</span>: &#123;</span><br><span class="line">            <span class="attr">itemWidth</span>: <span class="number">60</span>,</span><br><span class="line">            <span class="attr">itemHeight</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">itemGap</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">textStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="number">40</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">padding</span>: [<span class="number">22</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">grid</span>: &#123;</span><br><span class="line">            <span class="attr">left</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">right</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">top</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">bottom</span>: <span class="number">100</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">xAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">yAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">            <span class="attr">backgroundColor</span>: <span class="string">&#x27;rgba(0, 103, 138, 1)&#x27;</span>,</span><br><span class="line">            <span class="attr">textStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#E7FCFF&#x27;</span>,</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="number">32</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">borderWidth</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">axisPointer</span>: &#123;</span><br><span class="line">                <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;rgb(126,199,255)&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [],</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">valueAxisTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;value&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">alignTicks</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">splitLine</span>: &#123;</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#1E4F79&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;dashed&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">2</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">margin</span>: <span class="number">16</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisTick</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisLine</span>: &#123;</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#1E4F79&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">3</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">nameTextStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">align</span>: <span class="string">&#x27;right&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">nameGap</span>: <span class="number">30</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">categoryAxisTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: [],</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">splitLine</span>: &#123;</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#1E4F79&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;dashed&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">2</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">margin</span>: <span class="number">16</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisTick</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">axisLine</span>: &#123;</span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#1E4F79&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">3</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">nameTextStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">verticalAlign</span>: <span class="string">&#x27;top&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">nameGap</span>: <span class="number">30</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">typeMapTemplate</span>: &#123;</span><br><span class="line">        <span class="string">&quot;line&quot;</span>: <span class="string">&quot;lineTemplate&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bar&quot;</span>: <span class="string">&quot;barTemplate&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">lineTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">        <span class="attr">smooth</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">symbol</span>: <span class="string">&#x27;emptyCircle&#x27;</span>,</span><br><span class="line">        <span class="attr">symbolSize</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">            <span class="attr">width</span>: <span class="number">4</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">barTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">        <span class="attr">barWidth</span>: <span class="number">32</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">noDataTemplate</span>: &#123;</span><br><span class="line">        <span class="attr">graphic</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">            <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">            <span class="attr">top</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">            <span class="attr">style</span>: &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;暂无数据&#x27;</span>,</span><br><span class="line">                <span class="attr">textAlign</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">                <span class="attr">fill</span>: <span class="string">&#x27;#999&#x27;</span>,</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="number">32</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><blockquote>
<p>按照echarts的写法写一个最简单的配置然后通过合并生成完整的option</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例配置</span></span><br><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">120</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">110</span>, <span class="number">130</span>]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取图表配置</span></span><br><span class="line"><span class="keyword">var</span> option = <span class="title class_">GenerateChart</span>.<span class="title function_">getOption</span>(config);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(option);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化图表</span></span><br><span class="line"><span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>));</span><br><span class="line">myChart.<span class="title function_">setOption</span>(option);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/image/Echarts%E9%85%8D%E7%BD%AE%E7%94%9F%E6%88%90/1729067191689.png" alt="1729067191689"></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote>
<p>如果不支持WeakMap的使用以下的函数，但是不能有循环引用</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            cloneObj[i] = <span class="variable language_">this</span>.<span class="title function_">clone</span>(obj[i], map);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj; <span class="comment">// 或者使用其他方法克隆函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isObject</span>(obj)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(k)) &#123;</span><br><span class="line">                cloneObj[k] = <span class="variable language_">this</span>.<span class="title function_">clone</span>(obj[k], map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cloneObj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">deepMerge</span>: <span class="keyword">function</span> (<span class="params">target, source</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (source.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isObject</span>(source[key])) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!target[key] || !<span class="variable language_">this</span>.<span class="title function_">isObject</span>(target[key])) &#123;</span><br><span class="line">                    target[key] = &#123;&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">deepMerge</span>(target[key], source[key]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                target[key] = source[key];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> target;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol>
<li><strong>灵活性高</strong><ul>
<li><strong>模板定制</strong> : 提供了多种图表模板，用户可以根据需要灵活定制和扩展。</li>
<li><strong>深度合并</strong> : <code>deepMerge</code> 方法支持深度合并对象，使得配置的组合和覆盖更加灵活。</li>
</ul>
</li>
<li><strong>功能强大</strong><ul>
<li><strong>克隆支持</strong> : <code>clone</code> 方法支持深度克隆对象，包括处理循环引用，确保配置对象的完整性。</li>
<li><strong>类型映射</strong> : <code>typeMapTemplate</code> 提供了图表类型的映射，简化了不同类型图表的配置生成。</li>
</ul>
</li>
<li><strong>易于使用</strong><ul>
<li><strong>接口简洁</strong> : echarts的文档就是该工具的文档。</li>
</ul>
</li>
<li><strong>扩展性强</strong><ul>
<li><strong>模块化设计</strong> : 工具采用模块化设计，便于扩展和维护。</li>
<li><strong>插件支持</strong> : 可以很容易地集成其他插件或工具，增强功能。</li>
</ul>
</li>
</ol>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ol>
<li><strong>性能开销</strong><ul>
<li><strong>深度克隆</strong> : 深度克隆和深度合并操作在处理大数据集时可能会有性能开销，需要谨慎使用。</li>
<li><strong>循环引用</strong> : 处理循环引用会增加额外的计算开销，可能影响性能。</li>
</ul>
</li>
<li><strong>复杂性</strong><ul>
<li><strong>配置复杂</strong> : 虽然提供了灵活性，但复杂的配置对象可能增加使用难度，需要用户深入理解配置结构。</li>
<li><strong>模板管理</strong> : 模板的管理和维护可能变得复杂，特别是当模板数量增加时。</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>组件</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Echarts</tag>
        <tag>前端</tag>
        <tag>组件</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习笔记</title>
    <url>/2024/12/02/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2><ul>
<li>内核的引导。</li>
<li>运行 init。</li>
<li>系统初始化。</li>
<li>建立终端 。</li>
<li>用户登录系统。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/2024/12/02/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="ps-当前进程状态查询"><a href="#ps-当前进程状态查询" class="headerlink" title="ps 当前进程状态查询"></a>ps 当前进程状态查询</h3><blockquote>
<p>process status:用于显示当前进程的状态，类似于 windows 的任务管理器。</p>
</blockquote>
<p><a href="https://www.runoob.com/linux/linux-comm-ps.html">Linux ps 命令</a></p>
<p><strong>例子：</strong></p>
<p><code>ps aux | grep mono</code> 查询mono进程</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>USER</td>
<td>运行进程的用户名</td>
</tr>
<tr>
<td>PID</td>
<td>进程ID，即进程的唯一标识符</td>
</tr>
<tr>
<td>%CPU</td>
<td>进程占用的 CPU 使用率</td>
</tr>
<tr>
<td>%MEM</td>
<td>进程占用的物理内存百分比</td>
</tr>
<tr>
<td>VSZ</td>
<td>进程使用的虚拟内存大小（以 KB 为单位）</td>
</tr>
<tr>
<td>RSS</td>
<td>进程使用的驻留集大小，即实际物理内存占用（以 KB 为单位）</td>
</tr>
<tr>
<td>TTY</td>
<td>启动进程的终端名。? 表示没有关联的终端</td>
</tr>
<tr>
<td>STAT</td>
<td>进程状态，例如 S (sleeping)，R (running)，Z (zombie) 等</td>
</tr>
<tr>
<td>START</td>
<td>进程启动时间</td>
</tr>
<tr>
<td>TIME</td>
<td>进程占用的 CPU 时间</td>
</tr>
<tr>
<td>COMMAND</td>
<td>启动进程的命令行</td>
</tr>
</tbody></table>
<h3 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h3><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><p><a href="https://www.runoob.com/linux/linux-comm-cat.html">Linux cat 命令 </a></p>
<p><code>cat -n filename</code> 查看文件内容 并且 显示行号</p>
<h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><p><a href="https://www.runoob.com/linux/linux-comm-less.html">Linux less 命令 </a></p>
<h2 id="进程启动"><a href="#进程启动" class="headerlink" title="进程启动"></a>进程启动</h2><p><a href="https://www.runoob.com/linux/linux-comm-nohup.html">Linux nohup 命令</a></p>
<p><strong>判断当前系统是哪种初始化信通</strong></p>
<p><code>ps -p 1 -o comm=</code></p>
<p><strong>SysVinit</strong> 或 <strong>systemd</strong></p>
<blockquote>
<p><code>service_name</code>  可以通过  ps -p <code>&lt;pid&gt;</code> -o comm&#x3D;  来查询</p>
</blockquote>
<h4 id="停止进程"><a href="#停止进程" class="headerlink" title="停止进程"></a>停止进程</h4><table>
<thead>
<tr>
<th>类型</th>
<th>命令</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>systemd</td>
<td>systemctl stop <service_name></td>
<td></td>
</tr>
<tr>
<td>SysVinit</td>
<td>service <service_name> start</td>
<td></td>
</tr>
<tr>
<td></td>
<td>kill <code>&lt;pid&gt;</code></td>
<td></td>
</tr>
</tbody></table>
<h4 id="启动进程"><a href="#启动进程" class="headerlink" title="启动进程"></a>启动进程</h4><blockquote>
<p><code>nohup /root/runoob.sh &amp;</code>  <code>&amp;</code>让命令在后台执行</p>
</blockquote>
<table>
<thead>
<tr>
<th>类型</th>
<th>命令</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>systemd</td>
<td>systemctl start <service_name></td>
<td></td>
</tr>
<tr>
<td>SysVinit</td>
<td>service <service_name> start</td>
<td></td>
</tr>
<tr>
<td></td>
<td>nohup command &amp;</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql常用命令</title>
    <url>/2024/11/05/Mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="1-数据操作"><a href="#1-数据操作" class="headerlink" title="1. 数据操作"></a>1. 数据操作</h3><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO table_name (column1, column2, column3, ...)</span><br><span class="line">VALUES (value1, value2, value3, ...);</span><br></pre></td></tr></table></figure>

<h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT column1, column2, ...</span><br><span class="line">FROM table_name</span><br><span class="line">WHERE condition;</span><br></pre></td></tr></table></figure>

<h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE table_name</span><br><span class="line">SET column1 = value1, column2 = value2, ...</span><br><span class="line">WHERE condition;</span><br></pre></td></tr></table></figure>

<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM table_name</span><br><span class="line">WHERE condition;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="2-数据库操作"><a href="#2-数据库操作" class="headerlink" title="2. 数据库操作"></a>2. 数据库操作</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE database_name;</span><br></pre></td></tr></table></figure>

<h4 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>

<h4 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USE database_name;</span><br></pre></td></tr></table></figure>

<h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP DATABASE database_name;</span><br></pre></td></tr></table></figure>

<h3 id="3-表操作"><a href="#3-表操作" class="headerlink" title="3. 表操作"></a>3. 表操作</h3><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE table_name (</span><br><span class="line">    column1 datatype,</span><br><span class="line">    column2 datatype,</span><br><span class="line">    column3 datatype,</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h4 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DESCRIBE table_name;</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW COLUMNS FROM table_name;</span><br></pre></td></tr></table></figure>

<h4 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h4><p>添加列：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE table_name ADD column_name datatype;</span><br></pre></td></tr></table></figure>

<p>修改列：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY column_name new_datatype;</span><br></pre></td></tr></table></figure>

<p>删除列：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE table_name DROP COLUMN column_name;</span><br></pre></td></tr></table></figure>

<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE table_name;</span><br></pre></td></tr></table></figure>

<h3 id="4-用户管理"><a href="#4-用户管理" class="headerlink" title="4. 用户管理"></a>4. 用户管理</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;username&#x27;@&#x27;host&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP USER &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="查看所有用户"><a href="#查看所有用户" class="headerlink" title="查看所有用户"></a>查看所有用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT User FROM mysql.user;</span><br></pre></td></tr></table></figure>

<h3 id="5-权限管理"><a href="#5-权限管理" class="headerlink" title="5. 权限管理"></a>5. 权限管理</h3><h4 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT privilege_type ON database_name.table_name TO &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure>

<p>例如授予用户对某个数据库的所有权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON database_name.* TO &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="撤消权限"><a href="#撤消权限" class="headerlink" title="撤消权限"></a>撤消权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REVOKE privilege_type ON database_name.table_name FROM &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure>

<p>例如撤消用户对某个数据库的所有权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REVOKE ALL PRIVILEGES ON database_name.* FROM &#x27;username&#x27;@&#x27;host&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<h3 id="6-其他常用命令"><a href="#6-其他常用命令" class="headerlink" title="6. 其他常用命令"></a>6. 其他常用命令</h3><h4 id="显示当前用户"><a href="#显示当前用户" class="headerlink" title="显示当前用户"></a>显示当前用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT CURRENT_USER();</span><br></pre></td></tr></table></figure>

<h4 id="显示当前数据库"><a href="#显示当前数据库" class="headerlink" title="显示当前数据库"></a>显示当前数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DATABASE();</span><br></pre></td></tr></table></figure>

<h4 id="显示所有表"><a href="#显示所有表" class="headerlink" title="显示所有表"></a>显示所有表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure>

<h4 id="显示服务器状态"><a href="#显示服务器状态" class="headerlink" title="显示服务器状态"></a>显示服务器状态</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW STATUS;</span><br></pre></td></tr></table></figure>

<h4 id="显示系统变量"><a href="#显示系统变量" class="headerlink" title="显示系统变量"></a>显示系统变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES;</span><br></pre></td></tr></table></figure>

<h3 id="7-其他"><a href="#7-其他" class="headerlink" title="7.其他"></a>7.其他</h3><h4 id="显示建表SQL脚本"><a href="#显示建表SQL脚本" class="headerlink" title="显示建表SQL脚本"></a>显示建表SQL脚本</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ys_db.tbmoduleinfo2;</span><br></pre></td></tr></table></figure>

<h4 id="显示创建视图SQL脚本"><a href="#显示创建视图SQL脚本" class="headerlink" title="显示创建视图SQL脚本"></a>显示创建视图SQL脚本</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">CREATE</span> <span class="keyword">view</span> ys_db.v_normaluser;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo使用说明</title>
    <url>/2024/10/15/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="命令总结"><a href="#命令总结" class="headerlink" title="命令总结"></a>命令总结</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">hexo new [layout] &lt;title&gt; # 生成新文章</span><br><span class="line">hexo g	#markdown渲染html</span><br><span class="line">hexo s #打开本地服务</span><br><span class="line">hexo d #推送至github</span><br><span class="line">hexo S --draft #本机预览草稿</span><br><span class="line">hexo P &lt;filename&gt; #草稿发布为正式文章</span><br><span class="line">npm run local #本机预览服务 包含草稿</span><br><span class="line">npm run sync #自定义更新指令</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="创建一片文章"><a href="#创建一片文章" class="headerlink" title="创建一片文章"></a>创建一片文章</h1><ol>
<li><p>命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>优点:自动生成一些标记</li>
<li>缺点：需要手动切换至对应文件编辑</li>
</ul>
<blockquote>
<p>layout :<code>post</code>、<code>page</code> 和 <code>draft</code> ；<code>page</code>就是在Source下生成对应的文件夹然后生成一个index.md文件,另外两个就是生成对应文件夹 并且生成新的markdown文件名称</p>
</blockquote>
</li>
<li><p>自定义layout</p>
<blockquote>
<p>layout，自定义的位于 scaffolds文件下 , 用于定义一些Front-matter  和模板内容</p>
</blockquote>
</li>
<li><p>使用自定义layout</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new custom_template &quot;根据自定义模板生成文章&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>\source\_posts 文件夹下直接创建markdown文件</p>
<ul>
<li>优点: 避免繁琐的命令</li>
<li>缺点:Front-matter需要手动书写</li>
</ul>
</li>
</ol>
<h1 id="阅读更多链接"><a href="#阅读更多链接" class="headerlink" title="阅读更多链接"></a>阅读更多链接</h1><p><code>&lt;!-- more --&gt;</code>前的内容被展示 剩下的点击<strong>阅读全文</strong>展示</p>
<h1 id="嵌入图片"><a href="#嵌入图片" class="headerlink" title="嵌入图片"></a>嵌入图片</h1><p><strong>思路：</strong></p>
<ol>
<li>hexo 的工作本质就是将markdown 转成 html  ,所以最终展示 图片按照 image标签的规则来即可；</li>
<li>我使用的markdown插件为<strong>Office Viewer(Markdown Editor)</strong> 可以直接插入图片 它会在文章同级生成 <code>/image/[文章名称]/[图片名称].png</code>如 <code>source\_posts\image\Echarts配置生成\1729064676610.png</code> ，并且编译出来的image的url为绝对路径，所以我需要让——post下的image文件夹copy到 public文件夹下。</li>
<li>由于未找到自定义配置如何实现  所以通过自定义脚本来实现，根路径下创建自定义任务 <code>copy_images.js</code>内容如下</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs-extra&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义源路径和目标路径</span></span><br><span class="line"><span class="keyword">const</span> sourcePath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;source/_posts/image&#x27;</span>); <span class="comment">// 源文件夹路径</span></span><br><span class="line"><span class="keyword">const</span> destPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public/image&#x27;</span>); <span class="comment">// 目标文件夹路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断源文件夹是否存在</span></span><br><span class="line"><span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(sourcePath)) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 复制文件</span></span><br><span class="line">fs.<span class="title function_">copy</span>(sourcePath, destPath)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;source/_posts/image copied to public/image successfully!&#x27;</span>))</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;复制过程中出现错误:&#x27;</span>, err.<span class="property">message</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><code>package.json</code> 设置自定义脚本</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;after_build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node copy_images.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>由于执行比较麻烦可以将命令合并,一次执行 发布、图片拷贝、同步远程</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">     <span class="attr">&quot;after_build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node copy_images.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;sync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo generate &amp;&amp; node copy_images.js &amp;&amp; hexo deploy&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h1 id="配置mermaid"><a href="#配置mermaid" class="headerlink" title="配置mermaid"></a>配置mermaid</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://foobarweb.net/tools/hexo/support-mermaid.html#_1-mermaid">设置hexo支持mermaid | 天天教程</a></p>
<p><a href="https://fuguigui.github.io/hexo2/">一次完整的Hexo写作流程</a></p>
<p><a href="https://hexo.io/zh-cn/">hexo官方文档</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>iview组件记录</title>
    <url>/2025/01/08/iview%E7%BB%84%E4%BB%B6%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="表格单击行选中"><a href="#表格单击行选中" class="headerlink" title="表格单击行选中"></a>表格单击行选中</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> time = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">var</span> timeOut = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">onRowClick</span> = <span class="keyword">function</span> (<span class="params">row, index</span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timeOut);</span><br><span class="line">    timeOut = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (row.<span class="property">_disabled</span> != <span class="literal">undefined</span> &amp;&amp; row.<span class="property">_disabled</span> == <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pdp.<span class="property">$refs</span>.<span class="property">configtable</span>.<span class="title function_">toggleSelect</span>(index);</span><br><span class="line">    &#125;, time)</span><br><span class="line">&#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>组件</category>
      </categories>
      <tags>
        <tag>iview</tag>
      </tags>
  </entry>
  <entry>
    <title>js代码片段</title>
    <url>/2024/11/07/js%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/</url>
    <content><![CDATA[<h2 id="前端编码"><a href="#前端编码" class="headerlink" title="前端编码"></a>前端编码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encodeURIComponent	decodeURIComponent</span><br><span class="line">encodeURI			decodeURI</span><br><span class="line">escape				unescape</span><br></pre></td></tr></table></figure>
<blockquote>
<ol>
<li>encodeURIComponent()和decodeURIComponent()：用于编码和解码URL中的参数部分，包括保留字符和中文字符。在编码过程中，保留字符会被转换为它们的十六进制转义序列，以避免与URL语法发生冲突；中文字符会被编码为UTF-8字符集下的十六进制编码，以便在URL中安全使用。</li>
<li>encodeURI()和decodeURI()：用于编码和解码整个URL，但是，不会进行对特殊字符（例如冒号、斜杠、问号等）的编码。这些方法主要用于编码URL本身，而不是参数部分。</li>
<li>escape()和unescape()：用于编码和解码字符串中的Unicode字符。但是，由于这些方法不适用于所有字符，现在很少使用。</li>
</ol>
</blockquote>
<span id="more"></span>
<h2 id="未加载图片显示备用图片"><a href="#未加载图片显示备用图片" class="headerlink" title="未加载图片显示备用图片"></a>未加载图片显示备用图片</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/i/t.png&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;this.src = &#x27;/i/sgc/shengchan/no_img.png&#x27;;this.onerror = null;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>实现思路是获取不到图片时会触发onerror 函数，在该函数内将src改为指定的图片。为了避免error指定的图片也拿不到从而陷入死循环将this.onerror &#x3D; null ;注销回调函数</p>
</blockquote>
<h2 id="判断一个地址能否拿到图片"><a href="#判断一个地址能否拿到图片" class="headerlink" title="判断一个地址能否拿到图片"></a>判断一个地址能否拿到图片</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkImgExist</span>  (<span class="params">src, successCallback, errorCallback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line">    img.<span class="property">src</span> = src</span><br><span class="line">    img.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">successCallback</span>(src);</span><br><span class="line">    &#125;</span><br><span class="line">    img.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">errorCallback</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">successCallback</span>(<span class="params">src</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(src,<span class="string">&quot;能够获取到图片&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">errorCallback</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;获取不到图片&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="图片中文名处理"><a href="#图片中文名处理" class="headerlink" title="图片中文名处理"></a>图片中文名处理</h2><h3 id="前端部分处理"><a href="#前端部分处理" class="headerlink" title="前端部分处理"></a>前端部分处理</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> imgName = <span class="string">&quot;中文名图片.png&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;/i/sgc/shengchan/linedefect/&quot;</span> + <span class="built_in">encodeURIComponent</span>(imgName)</span><br></pre></td></tr></table></figure>

<p>对中文部分通过encodeURIComponent转为utf-8</p>
<h3 id="服务器部分"><a href="#服务器部分" class="headerlink" title="服务器部分"></a>服务器部分</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export MONO_EXTERNAL_ENCODINGS=gbk</span><br></pre></td></tr></table></figure>

<p>在 &#x2F;usr&#x2F;jexus&#x2F;jws 加上上方的</p>
<blockquote>
<p>linux服务器，华北生技线路缺陷使用</p>
</blockquote>
<h2 id="水印"><a href="#水印" class="headerlink" title="水印"></a>水印</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">canvasWaterMark</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">    container = <span class="variable language_">document</span>.body,</span></span><br><span class="line"><span class="params">    width = <span class="number">300</span>,</span></span><br><span class="line"><span class="params">    height = <span class="number">300</span>,</span></span><br><span class="line"><span class="params">    textAlign = <span class="string">&#x27;center&#x27;</span>,</span></span><br><span class="line"><span class="params">    textBaseline = <span class="string">&#x27;middle&#x27;</span>,</span></span><br><span class="line"><span class="params">    alpha = <span class="number">0.3</span>,</span></span><br><span class="line"><span class="params">    font = <span class="string">&#x27;20px monaco, microsoft yahei&#x27;</span>,</span></span><br><span class="line"><span class="params">    fillStyle = <span class="string">&#x27;rgba(184, 184, 184, 0.8)&#x27;</span>,</span></span><br><span class="line"><span class="params">    content = <span class="string">&#x27;JumpServer&#x27;</span>,</span></span><br><span class="line"><span class="params">    rotate = -<span class="number">45</span>,</span></span><br><span class="line"><span class="params">    zIndex = <span class="number">1000</span></span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    canvas.<span class="property">width</span> = width;</span><br><span class="line">    canvas.<span class="property">height</span> = height;</span><br><span class="line">    ctx.<span class="property">globalAlpha</span> = <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">    ctx.<span class="property">font</span> = font;</span><br><span class="line">    ctx.<span class="property">fillStyle</span> = fillStyle;</span><br><span class="line">    ctx.<span class="property">textAlign</span> = textAlign;</span><br><span class="line">    ctx.<span class="property">textBaseline</span> = textBaseline;</span><br><span class="line">    ctx.<span class="property">globalAlpha</span> = alpha;</span><br><span class="line"></span><br><span class="line">    ctx.<span class="title function_">translate</span>(<span class="number">0.5</span> * width, <span class="number">0.5</span> * height);</span><br><span class="line">    ctx.<span class="title function_">rotate</span>((rotate * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">180</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">generateMultiLineText</span>(<span class="params">_ctx, _text, _width, _lineHeight</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> words = _text.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> line = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>; n &lt; words.<span class="property">length</span>; n++) &#123;</span><br><span class="line">            line = words[n];</span><br><span class="line">            line = <span class="title function_">truncateCenter</span>(line, <span class="number">25</span>);</span><br><span class="line">            _ctx.<span class="title function_">fillText</span>(line, x, y);</span><br><span class="line">            y += _lineHeight;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">generateMultiLineText</span>(ctx, content, width, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> base64Url = canvas.<span class="title function_">toDataURL</span>();</span><br><span class="line">    <span class="keyword">const</span> watermarkDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    watermarkDiv.<span class="title function_">setAttribute</span>(<span class="string">&#x27;style&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">            position:absolute;</span></span><br><span class="line"><span class="string">            top:0;</span></span><br><span class="line"><span class="string">            left:0;</span></span><br><span class="line"><span class="string">            width:100%;</span></span><br><span class="line"><span class="string">            height:100%;</span></span><br><span class="line"><span class="string">            z-index:<span class="subst">$&#123;zIndex&#125;</span>;</span></span><br><span class="line"><span class="string">            pointer-events:none;</span></span><br><span class="line"><span class="string">            background-repeat:repeat;</span></span><br><span class="line"><span class="string">            background-image:url(&#x27;<span class="subst">$&#123;base64Url&#125;</span>&#x27;)`</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    container.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;relative&#x27;</span>;</span><br><span class="line">    container.<span class="title function_">insertBefore</span>(watermarkDiv, container.<span class="property">firstChild</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">truncateCenter</span>(<span class="params">s, l</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="property">length</span> &lt;= l) &#123;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> centerIndex = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(l / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> s.<span class="title function_">slice</span>(<span class="number">0</span>, centerIndex - <span class="number">2</span>) + <span class="string">&#x27;...&#x27;</span> + s.<span class="title function_">slice</span>(centerIndex + <span class="number">1</span>, l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="鼠标滚动横向滚动条"><a href="#鼠标滚动横向滚动条" class="headerlink" title="鼠标滚动横向滚动条"></a>鼠标滚动横向滚动条</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//设置overflow: auto;属性的div的DOM对象</span></span><br><span class="line">varselectDom =  <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">selectRef</span>;</span><br><span class="line"><span class="comment">//添加滚轮事件</span></span><br><span class="line">selectDom.<span class="title function_">addEventListener</span>(<span class="string">&#x27;wheel&#x27;</span>,<span class="function">(<span class="params">event</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//组织默认行为</span></span><br><span class="line">    event.<span class="title function_">preventDefault</span>()</span><br><span class="line">    <span class="comment">//将下滚的距离增加到距左边的距离</span></span><br><span class="line">    selectDom.<span class="property">scrollLeft</span> += <span class="number">10</span>*event.<span class="property">deltaY</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="全屏"><a href="#全屏" class="headerlink" title="全屏"></a>全屏</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">screenFull</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//要全屏的DOM对象，可以用vue的this.$refs 或 原生 document.get...方法</span></span><br><span class="line">    vardom = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">videoContainer</span>;</span><br><span class="line">    <span class="comment">// 未全屏</span></span><br><span class="line">    <span class="comment">//用来判断当前是否全屏，一定是在document对象下判断</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">window</span>.<span class="property">document</span>.<span class="property">fullscreenElement</span>) &#123;</span><br><span class="line">        <span class="comment">//这个是要放大的元素调用全屏方法</span></span><br><span class="line">        dom.<span class="title function_">requestFullscreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//一定要document调用退出全屏方法</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">document</span>.<span class="title function_">exitFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="video"><a href="#video" class="headerlink" title="video"></a>video</h2><h3 id="隐藏原生组件"><a href="#隐藏原生组件" class="headerlink" title="隐藏原生组件"></a>隐藏原生组件</h3><table>
<thead>
<tr>
<th>功能</th>
<th>代码</th>
</tr>
</thead>
<tbody><tr>
<td>禁用全屏</td>
<td>controlslist&#x3D;”nofullscreen”</td>
</tr>
<tr>
<td>隐藏倍速播放</td>
<td>controlslist&#x3D;”noplaybackrate”</td>
</tr>
<tr>
<td>隐藏下载</td>
<td>controlslist&#x3D;”nodownload”</td>
</tr>
<tr>
<td>隐藏远程播放</td>
<td>controlslist&#x3D;”noremoteplayback”</td>
</tr>
<tr>
<td>隐藏画中画</td>
<td>disablePictureInPicture&#x3D;”true”</td>
</tr>
<tr>
<td>隐藏右键</td>
<td>oncontextmenu&#x3D;”return false”</td>
</tr>
<tr>
<td></td>
<td><code>-internal</code>开头的样式这样改不了</td>
</tr>
<tr>
<td>隐藏全屏</td>
<td>video::-webkit-media-controls-fullscreen-button{display:none;}</td>
</tr>
<tr>
<td>隐藏播放按钮</td>
<td>video::-webkit-media-controls-play-button{display:none;}</td>
</tr>
<tr>
<td>隐藏音量按钮</td>
<td>video::-webkit-media-controls-volume-control-container{display:none;}</td>
</tr>
<tr>
<td>隐藏进度条</td>
<td>video::-webkit-media-controls-timeline{display:none;}</td>
</tr>
</tbody></table>
<blockquote>
<p>要显示video详细的内部标签，需要打开 <strong>显示用户代理shadow DOM</strong></p>
<p>noplaybackrate 在MDN上没显示</p>
<p>将画中画，下载，倍数功能全部去掉后三个点也就去掉了</p>
</blockquote>
<p>参考： <a href="https://juejin.cn/post/7202174759999766587">原生 audio, video 标签 controls 的修改 - 掘金 (juejin.cn)</a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;//全屏按钮</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-fullscreen-button &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//播放按钮</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-play-button &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//进度条</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-timeline &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line">//观看的当前时间</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-current-time-display&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;         </span><br><span class="line">&#125;</span><br><span class="line">//剩余时间</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-time-remaining-display &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;         </span><br><span class="line">&#125;</span><br><span class="line">//音量按钮</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-mute-button &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;         </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-toggle-closed-captions-button &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;         </span><br><span class="line">&#125;</span><br><span class="line">//音量的控制条</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-volume-slider &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;         </span><br><span class="line">&#125;</span><br><span class="line">//所有控件</span><br><span class="line"><span class="selector-tag">video</span>::-webkit-media-controls-enclosure&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="前端视频加文字信息"><a href="#前端视频加文字信息" class="headerlink" title="前端视频加文字信息"></a>前端视频加文字信息</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">desc</span>=<span class="string">&quot;视频区&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height:calc(100% - 60px);&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;f jc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:relative;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">style</span>=<span class="string">&quot;object-fit: contain;height:100%;max-width:100vw&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;videoRef&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">controlslist</span>=<span class="string">&quot;nodownload nofullscreen&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">sa</span> <span class="attr">controls</span>=<span class="string">&quot;true&quot;</span> <span class="attr">playsinline</span>=<span class="string">&quot;true&quot;</span> <span class="attr">disablePictureInPicture</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">sa</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;a src=&quot;/replay/rain.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/a&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">sa</span> <span class="attr">src</span>=<span class="string">&quot;videoSrc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">sa</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;top:20px;left:20px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;watermark&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">sa</span> <span class="attr">value</span>=<span class="string">&quot;this.watermarkInfo.worker&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">sa</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;watermark&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">sa</span> <span class="attr">value</span>=<span class="string">&quot;this.watermarkInfo.auditor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">sa</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意点：</strong></p>
<p>1、video标签要和水印信息标签平级</p>
<p>2、video标签父元素要由video内容撑开，不能设置width，height，要让其紧密贴合video，才能使水印位置正常</p>
<p>3、video 标签要对宽高的最大值做限定不然，全屏后会出现bug</p>
<p>4、全屏需要手动对其父元素进行全屏才能包含水印。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>功能片段</tag>
        <tag>工具</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>vs快捷键</title>
    <url>/2025/02/05/vs%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h3 id="一、核心快捷键分类"><a href="#一、核心快捷键分类" class="headerlink" title="一、核心快捷键分类"></a><strong>一、核心快捷键分类</strong></h3><h4 id="1-文件与项目操作"><a href="#1-文件与项目操作" class="headerlink" title="1. 文件与项目操作"></a><strong>1. 文件与项目操作</strong></h4><ul>
<li><strong>Ctrl + N</strong> ：新建文件</li>
<li><strong>Ctrl + Shift + N</strong> ：新建项目</li>
<li><strong>Ctrl + O</strong> ：打开文件</li>
<li><strong>Ctrl + S</strong> ：保存当前文件</li>
<li><strong>Ctrl + Shift + S</strong> ：保存所有文件</li>
<li><strong>Ctrl + W</strong> ：关闭当前标签页</li>
<li><strong>Ctrl + F4</strong> ：关闭当前文档</li>
<li><strong>Ctrl + Tab</strong> ：切换打开的标签页</li>
</ul>
<h4 id="2-代码编辑"><a href="#2-代码编辑" class="headerlink" title="2. 代码编辑"></a><strong>2. 代码编辑</strong></h4><ul>
<li><strong>Ctrl + Space</strong> ：触发智能提示（代码补全）</li>
<li><strong>Ctrl + K → Ctrl + C</strong> ：注释选中行</li>
<li><strong>Ctrl + K → Ctrl + U</strong> ：取消注释</li>
<li><strong>Ctrl + D</strong> ：复制当前行到下一行</li>
<li><strong>Ctrl + X</strong> ：剪切当前行（未选中时）</li>
<li><strong>Alt + ↑&#x2F;↓</strong> ：向上&#x2F;向下移动当前行或代码块</li>
<li><strong>Ctrl + R → Ctrl + R</strong> ：重命名符号（变量、方法等，自动更新所有引用）</li>
<li><strong>Ctrl + .</strong> ：快速操作和重构（生成代码、修复建议等）</li>
</ul>
<h4 id="3-代码导航"><a href="#3-代码导航" class="headerlink" title="3. 代码导航"></a><strong>3. 代码导航</strong></h4><ul>
<li><strong>F12</strong> ：跳转到定义（方法、类定义处）</li>
<li><strong>Ctrl + -</strong> ：后退到上一个光标位置</li>
<li><strong>Ctrl + Shift + -</strong> ：前进到下一个光标位置</li>
<li><strong>Ctrl + T</strong> ：全局搜索符号（类、方法、文件）</li>
<li><strong>Ctrl + F</strong> ：当前文件内搜索</li>
<li><strong>Ctrl + Shift + F</strong> ：全局搜索（跨解决方案）</li>
</ul>
<h4 id="4-调试与运行"><a href="#4-调试与运行" class="headerlink" title="4. 调试与运行"></a><strong>4. 调试与运行</strong></h4><ul>
<li><strong>F5</strong> ：启动调试（继续运行）</li>
<li><strong>Shift + F5</strong> ：停止调试</li>
<li><strong>F9</strong> ：切换断点</li>
<li><strong>F10</strong> ：逐过程执行（Step Over）</li>
<li><strong>F11</strong> ：逐语句执行（Step Into）</li>
<li><strong>Shift + F11</strong> ：跳出当前方法（Step Out）</li>
<li><strong>Ctrl + Alt + P</strong> ：附加到进程（Attach to Process）</li>
</ul>
<h4 id="5-窗口与布局管理"><a href="#5-窗口与布局管理" class="headerlink" title="5. 窗口与布局管理"></a><strong>5. 窗口与布局管理</strong></h4><ul>
<li><strong>Ctrl + Alt + L</strong> ：打开解决方案资源管理器</li>
<li><strong>Ctrl + Alt + O</strong> ：打开输出窗口</li>
<li><strong>Ctrl + Alt + E</strong> ：打开错误列表</li>
<li>**Ctrl + **,  <strong>Ctrl + E</strong> ：打开命令窗口（输入命令）</li>
<li><strong>Shift + Alt + Enter</strong> ：切换全屏模式</li>
</ul>
<h4 id="6-代码格式化"><a href="#6-代码格式化" class="headerlink" title="6. 代码格式化"></a><strong>6. 代码格式化</strong></h4><ul>
<li><strong>Ctrl + K → Ctrl + D</strong> ：格式化整个文档</li>
<li><strong>Ctrl + K → Ctrl + F</strong> ：格式化选中代码块</li>
</ul>
<hr>
<h3 id="二、常见工作流组合"><a href="#二、常见工作流组合" class="headerlink" title="二、常见工作流组合"></a><strong>二、常见工作流组合</strong></h3><h4 id="1-新建项目并快速编码"><a href="#1-新建项目并快速编码" class="headerlink" title="1. 新建项目并快速编码"></a><strong>1. 新建项目并快速编码</strong></h4><p> <strong>场景</strong> ：创建新项目并编写核心代码</p>
<ol>
<li><strong>Ctrl + Shift + N</strong> → 新建项目（选择模板如 C# 控制台应用）</li>
<li><strong>Ctrl + Shift + A</strong> → 添加新项（如类、接口）</li>
<li><strong>Ctrl + Space</strong> → 触发智能提示补全代码</li>
<li><strong>Ctrl + K → Ctrl + D</strong> → 格式化代码</li>
</ol>
<h4 id="2-调试与修复-Bug"><a href="#2-调试与修复-Bug" class="headerlink" title="2. 调试与修复 Bug"></a><strong>2. 调试与修复 Bug</strong></h4><p> <strong>场景</strong> ：定位并修复运行时错误</p>
<ol>
<li><strong>F9</strong> → 在可疑代码行设置断点</li>
<li><strong>F5</strong> → 启动调试，程序运行到断点暂停</li>
<li><strong>F10&#x2F;F11</strong> → 逐行执行，观察变量值（悬停变量名或使用  <strong>监视窗口</strong> ）</li>
<li><strong>Shift + F5</strong> → 停止调试，修改代码后重新运行</li>
</ol>
<h4 id="3-代码重构"><a href="#3-代码重构" class="headerlink" title="3. 代码重构"></a><strong>3. 代码重构</strong></h4><p> <strong>场景</strong> ：优化代码结构或重命名</p>
<ol>
<li><strong>Ctrl + R → Ctrl + R</strong> → 输入新名称，重命名变量&#x2F;方法</li>
<li><strong>选中代码块 → Ctrl + .</strong> → 提取方法（Extract Method）</li>
<li><strong>Ctrl + K → Ctrl + S</strong> → 包裹代码块（如 <code>try-catch</code>）</li>
</ol>
<h4 id="4-多文件协作"><a href="#4-多文件协作" class="headerlink" title="4. 多文件协作"></a><strong>4. 多文件协作</strong></h4><p> <strong>场景</strong> ：同时编辑多个文件并导航</p>
<ol>
<li><strong>Ctrl + T</strong> → 搜索符号（如类名 <code>MyClass</code>）</li>
<li><strong>F12</strong> → 跳转到定义</li>
<li><strong>Ctrl + -</strong> → 返回原文件</li>
<li>**Ctrl + ** → 分屏编辑（左右布局）</li>
</ol>
<h4 id="5-版本控制（Git）"><a href="#5-版本控制（Git）" class="headerlink" title="5. 版本控制（Git）"></a><strong>5. 版本控制（Git）</strong></h4><p> <strong>场景</strong> ：提交代码或解决冲突</p>
<ol>
<li><strong>Ctrl + Alt + S</strong> → 打开团队资源管理器（Team Explorer）</li>
<li><strong>输入提交信息 → Ctrl + Enter</strong> → 提交更改</li>
<li><strong>Ctrl + Shift + G</strong> → 查看文件差异</li>
</ol>
<h4 id="6-单元测试"><a href="#6-单元测试" class="headerlink" title="6. 单元测试"></a><strong>6. 单元测试</strong></h4><p> <strong>场景</strong> ：运行并验证测试用例</p>
<ol>
<li><strong>Ctrl + R → T</strong> → 运行当前测试方法</li>
<li><strong>Ctrl + R → A</strong> → 运行所有测试</li>
<li><strong>Ctrl + R → D</strong> → 调试当前测试</li>
</ol>
<hr>
<h3 id="三、高级技巧"><a href="#三、高级技巧" class="headerlink" title="三、高级技巧"></a><strong>三、高级技巧</strong></h3><ol>
<li><strong>自定义快捷键</strong> ：</li>
</ol>
<ul>
<li>通过 <code>工具 &gt; 选项 &gt; 环境 &gt; 键盘</code> 修改快捷键绑定。</li>
<li>例如，绑定 <code>Ctrl + E, Ctrl + W</code> 为自动换行。</li>
</ul>
<ol>
<li><strong>代码片段（Snippets）</strong> ：</li>
</ol>
<ul>
<li>输入 <code>ctor</code> → Tab → 自动生成构造函数。</li>
<li>输入 <code>prop</code> → Tab → 生成属性模板。</li>
</ul>
<ol>
<li><strong>快速访问工具栏</strong> ：</li>
</ol>
<ul>
<li>按 <code>Ctrl + 1</code> 聚焦到代码编辑器，<code>Ctrl + 2</code> 聚焦到解决方案资源管理器。</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode快捷键</title>
    <url>/2025/02/05/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h3 id="一、核心快捷键分类"><a href="#一、核心快捷键分类" class="headerlink" title="一、核心快捷键分类"></a><strong>一、核心快捷键分类</strong></h3><h4 id="1-文件与窗口操作"><a href="#1-文件与窗口操作" class="headerlink" title="1. 文件与窗口操作"></a><strong>1. 文件与窗口操作</strong></h4><ul>
<li><strong>Ctrl + N</strong> ：新建文件</li>
<li><strong>Ctrl + O</strong> ：打开文件</li>
<li><strong>Ctrl + S</strong> ：保存当前文件</li>
<li><strong>Ctrl + Shift + S</strong> ：另存为</li>
<li><strong>Ctrl + W</strong> ：关闭当前标签页</li>
<li><strong>Ctrl + P</strong> ：快速打开文件（输入文件名或路径）</li>
<li><strong>Ctrl + K → Ctrl + S</strong> ：查看所有快捷键（或通过 <code>File &gt; Preferences &gt; Keyboard Shortcuts</code>）</li>
</ul>
<h4 id="2-代码编辑"><a href="#2-代码编辑" class="headerlink" title="2. 代码编辑"></a><strong>2. 代码编辑</strong></h4><ul>
<li><strong>Ctrl + &#x2F;</strong> ：注释&#x2F;取消注释当前行</li>
<li><strong>Alt + ↑&#x2F;↓</strong> ：向上&#x2F;向下移动当前行</li>
<li><strong>Ctrl + D</strong> ：选中下一个相同内容（多光标编辑）</li>
<li><strong>Ctrl + Shift + L</strong> ：选中所有相同内容（批量修改）</li>
<li><strong>F2</strong> ：重命名符号（变量、函数名等，自动更新所有引用）</li>
<li><strong>Ctrl + .</strong> ：快速修复（如自动导入、修复错误）</li>
<li><strong>Alt + Click</strong> ：添加多个光标（支持任意位置）</li>
</ul>
<h4 id="3-代码导航"><a href="#3-代码导航" class="headerlink" title="3. 代码导航"></a><strong>3. 代码导航</strong></h4><ul>
<li><strong>Ctrl + G</strong> ：跳转到指定行号</li>
<li><strong>F12</strong> ：跳转到定义（函数、变量定义处）</li>
<li><strong>Alt + ←&#x2F;→</strong> ：返回&#x2F;前进到上一个光标位置</li>
<li><strong>Ctrl + T</strong> ：全局搜索符号（类、方法等）</li>
<li><strong>Ctrl + Shift + O</strong> ：导航到当前文件的符号（如函数、类）</li>
</ul>
<h4 id="4-搜索与替换"><a href="#4-搜索与替换" class="headerlink" title="4. 搜索与替换"></a><strong>4. 搜索与替换</strong></h4><ul>
<li><strong>Ctrl + F</strong> ：当前文件内搜索</li>
<li><strong>Ctrl + H</strong> ：当前文件内替换</li>
<li><strong>Ctrl + Shift + F</strong> ：全局搜索（跨文件）</li>
<li><strong>Ctrl + Shift + H</strong> ：全局替换</li>
</ul>
<h4 id="5-调试相关"><a href="#5-调试相关" class="headerlink" title="5. 调试相关"></a><strong>5. 调试相关</strong></h4><ul>
<li><strong>F5</strong> ：启动&#x2F;继续调试</li>
<li><strong>F9</strong> ：切换断点</li>
<li><strong>F10</strong> ：单步跳过（Step Over）</li>
<li><strong>F11</strong> ：单步进入（Step Into）</li>
<li><strong>Shift + F11</strong> ：单步跳出（Step Out）</li>
<li><strong>Ctrl + Shift + D</strong> ：打开调试侧边栏</li>
</ul>
<h4 id="6-终端与分屏"><a href="#6-终端与分屏" class="headerlink" title="6. 终端与分屏"></a><strong>6. 终端与分屏</strong></h4><ul>
<li><strong>Ctrl + &#96;</strong> ：打开&#x2F;关闭集成终端</li>
<li>**Ctrl + **：拆分编辑器（分屏）</li>
<li><strong>Ctrl + 1&#x2F;2&#x2F;3</strong> ：切换到第1&#x2F;2&#x2F;3个编辑器组</li>
<li><strong>Ctrl + B</strong> ：切换侧边栏显示&#x2F;隐藏</li>
</ul>
<hr>
<h3 id="二、常见工作流组合"><a href="#二、常见工作流组合" class="headerlink" title="二、常见工作流组合"></a><strong>二、常见工作流组合</strong></h3><h4 id="1-快速重构代码"><a href="#1-快速重构代码" class="headerlink" title="1. 快速重构代码"></a><strong>1. 快速重构代码</strong></h4><p> <strong>场景</strong> ：批量修改变量名、提取函数</p>
<ul>
<li><strong>F2</strong> → 输入新变量名（自动更新所有引用）</li>
<li><strong>选中代码块 → Ctrl + Shift + R</strong> → 提取为函数</li>
<li><strong>Ctrl + .</strong> → 根据建议自动修复代码（如未导入的模块）</li>
</ul>
<h4 id="2-多文件协同编辑"><a href="#2-多文件协同编辑" class="headerlink" title="2. 多文件协同编辑"></a><strong>2. 多文件协同编辑</strong></h4><p> <strong>场景</strong> ：同时查看和编辑多个文件</p>
<ol>
<li><strong>Ctrl + P</strong> → 输入文件名打开多个文件</li>
<li>**Ctrl + ** → 分屏显示</li>
<li><strong>Ctrl + Tab</strong> → 在分屏间切换焦点</li>
</ol>
<h4 id="3-调试与测试"><a href="#3-调试与测试" class="headerlink" title="3. 调试与测试"></a><strong>3. 调试与测试</strong></h4><p> <strong>场景</strong> ：快速定位并修复 Bug</p>
<ol>
<li><strong>F9</strong> → 在关键行设置断点</li>
<li><strong>F5</strong> → 启动调试</li>
<li><strong>F10&#x2F;F11</strong> → 逐行执行代码</li>
<li><strong>Ctrl + Shift + Y</strong> → 查看调试控制台输出</li>
</ol>
<h4 id="4-Git-版本控制"><a href="#4-Git-版本控制" class="headerlink" title="4. Git 版本控制"></a><strong>4. Git 版本控制</strong></h4><p> <strong>场景</strong> ：提交代码、解决冲突</p>
<ul>
<li><strong>Ctrl + Shift + G</strong> → 打开 Git 面板</li>
<li><strong>输入提交信息 → Ctrl + Enter</strong> → 提交代码</li>
<li><strong>Alt + ←&#x2F;→</strong> → 在代码差异间跳转</li>
</ul>
<h4 id="5-快速生成代码片段"><a href="#5-快速生成代码片段" class="headerlink" title="5. 快速生成代码片段"></a><strong>5. 快速生成代码片段</strong></h4><p> <strong>场景</strong> ：使用 Emmet 或模板快速生成代码</p>
<ul>
<li><strong>输入 <code>div.container&gt;ul.list&gt;li*3</code> → Tab</strong> → 生成 HTML 结构</li>
<li><strong>Ctrl + Space</strong> → 触发代码补全（如导入模块、函数参数提示）</li>
</ul>
<h4 id="6-批量操作与多光标"><a href="#6-批量操作与多光标" class="headerlink" title="6. 批量操作与多光标"></a><strong>6. 批量操作与多光标</strong></h4><p> <strong>场景</strong> ：同时修改多个位置的代码</p>
<ol>
<li><strong>Ctrl + D</strong> → 逐个选中相同内容（按一次选一个）</li>
<li><strong>Alt + Click</strong> → 在任意位置添加多个光标</li>
<li><strong>Shift + Alt + 拖动鼠标</strong> → 纵向选择（列编辑模式）</li>
</ol>
<hr>
<h3 id="三、高级技巧"><a href="#三、高级技巧" class="headerlink" title="三、高级技巧"></a><strong>三、高级技巧</strong></h3><ol>
<li><strong>自定义快捷键</strong> ：</li>
</ol>
<ul>
<li>通过 <code>File &gt; Preferences &gt; Keyboard Shortcuts</code> 修改或绑定快捷键。</li>
<li>例如，绑定 <code>Ctrl + E</code> 为格式化代码。</li>
</ul>
<ol>
<li><strong>快捷键组合记忆</strong> ：</li>
</ol>
<ul>
<li><strong>Ctrl + K → Ctrl + S</strong> 查看所有快捷键。</li>
<li>使用 <code>Ctrl + K → Ctrl + R</code> 导出当前快捷键表。</li>
</ul>
<ol>
<li><strong>集成扩展快捷键</strong> ：</li>
</ol>
<ul>
<li>如  <strong>Prettier</strong> （代码格式化）：<code>Shift + Alt + F</code></li>
<li>如  <strong>Live Server</strong> （启动本地服务器）：<code>Alt + L → Alt + O</code></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>vue2踩坑记录</title>
    <url>/2024/10/17/vue2%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="v-show失效"><a href="#v-show失效" class="headerlink" title="v-show失效"></a>v-show失效</h1><p>components\拖拽折线\index.html   拖拽组件右键菜单部分v-show 和flex同存则不生效 ，但是其他方式却无法复现这一问题</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;contextmenuRef&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;showContextMenu&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;display:flex;&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;saveDiff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>问题</strong>: <code>v-show</code>和 行内样式 <code>display:flex</code>同时设置在一个标签上 <code>v-show</code>不生效</p>
<p><strong>原因：</strong> 未知，并且无法复现</p>
<p><strong>解决方案</strong>：样式使用class或者v-show提高一层</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>笔记</tag>
        <tag>vue</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>windows快捷键</title>
    <url>/2025/02/05/windows%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h3 id="1-文件管理-整理"><a href="#1-文件管理-整理" class="headerlink" title="1. 文件管理 &amp; 整理"></a><strong>1. 文件管理 &amp; 整理</strong></h3><p> <strong>场景</strong> ：批量整理文件、创建新项目文件夹</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Win + E</strong> → 打开文件资源管理器</li>
<li><strong>Ctrl + Shift + N</strong> → 新建文件夹</li>
<li><strong>F2</strong> → 重命名文件夹</li>
<li><strong>Ctrl + C</strong> → 复制文件夹路径</li>
<li><strong>Win + V</strong> → 打开剪贴板历史（粘贴路径到其他应用）</li>
</ol>
<hr>
<h3 id="2-多任务办公"><a href="#2-多任务办公" class="headerlink" title="2. 多任务办公"></a><strong>2. 多任务办公</strong></h3><p> <strong>场景</strong> ：同时处理文档、浏览器、聊天工具</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Win + Ctrl + D</strong> → 新建虚拟桌面（隔离工作区）</li>
<li><strong>Win + Tab</strong> → 查看所有窗口和虚拟桌面</li>
<li><strong>Alt + Tab</strong> → 快速切换应用</li>
<li><strong>Win + →</strong> → 将浏览器窗口贴靠到右侧（分屏操作）</li>
<li><strong>Win + D</strong> → 快速返回桌面查找文件</li>
</ol>
<hr>
<h3 id="3-文档编辑-格式调整"><a href="#3-文档编辑-格式调整" class="headerlink" title="3. 文档编辑 &amp; 格式调整"></a><strong>3. 文档编辑 &amp; 格式调整</strong></h3><p> <strong>场景</strong> ：高效撰写报告或邮件</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Ctrl + N</strong> → 新建文档</li>
<li>输入内容后，<strong>Ctrl + S</strong> → 快速保存</li>
<li><strong>Ctrl + F</strong> → 查找关键词并修改</li>
<li><strong>Ctrl + B &#x2F; I &#x2F; U</strong> → 加粗、斜体、下划线调整格式</li>
<li><strong>Ctrl + P</strong> → 打印文档</li>
<li><strong>Alt + F4</strong> → 关闭文档</li>
</ol>
<hr>
<h3 id="4-浏览器高效搜索"><a href="#4-浏览器高效搜索" class="headerlink" title="4. 浏览器高效搜索"></a><strong>4. 浏览器高效搜索</strong></h3><p> <strong>场景</strong> ：快速查找资料并整理</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Ctrl + T</strong> → 新建标签页</li>
<li><strong>Ctrl + L</strong> → 跳转到地址栏输入关键词</li>
<li><strong>Enter</strong> → 搜索后，<strong>Ctrl + F</strong> → 在页面内定位关键词</li>
<li><strong>Ctrl + C</strong> → 复制关键内容</li>
<li><strong>Ctrl + W</strong> → 关闭标签页</li>
<li><strong>Ctrl + Shift + T</strong> → 恢复误关闭的标签页</li>
</ol>
<hr>
<h3 id="5-截图-快速分享"><a href="#5-截图-快速分享" class="headerlink" title="5. 截图 &amp; 快速分享"></a><strong>5. 截图 &amp; 快速分享</strong></h3><p> <strong>场景</strong> ：截取屏幕内容并发送</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Win + Shift + S</strong> → 区域截图（自动保存到剪贴板）</li>
<li><strong>Win + V</strong> → 打开剪贴板历史 → 选择截图</li>
<li><strong>Ctrl + V</strong> → 粘贴到微信&#x2F;邮件&#x2F;文档<br><em>（或直接 <strong>Win + E</strong> → 打开文件资源管理器保存截图）</em></li>
</ol>
<hr>
<h3 id="6-系统故障应急"><a href="#6-系统故障应急" class="headerlink" title="6. 系统故障应急"></a><strong>6. 系统故障应急</strong></h3><p> <strong>场景</strong> ：程序卡死或黑屏</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Ctrl + Shift + Esc</strong> → 直接打开任务管理器</li>
<li>选择无响应的程序 → <strong>Del</strong> → 结束任务</li>
<li>若黑屏：<strong>Win + Ctrl + Shift + B</strong> → 重置显卡驱动</li>
</ol>
<hr>
<h3 id="7-会议-演示模式"><a href="#7-会议-演示模式" class="headerlink" title="7. 会议 &amp; 演示模式"></a><strong>7. 会议 &amp; 演示模式</strong></h3><p> <strong>场景</strong> ：快速切换投影或多屏幕</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Win + P</strong> → 切换投影模式（扩展&#x2F;仅第二屏幕）</li>
<li><strong>Win + L</strong> → 临时锁定屏幕（离开座位时）</li>
<li><strong>Win + .</strong> → 快速插入表情符号（用于聊天工具）</li>
</ol>
<hr>
<h3 id="8-代码或文本批量处理"><a href="#8-代码或文本批量处理" class="headerlink" title="8. 代码或文本批量处理"></a><strong>8. 代码或文本批量处理</strong></h3><p> <strong>场景</strong> ：编程或长文本编辑</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Ctrl + ←&#x2F;→</strong> → 按单词移动光标</li>
<li><strong>Ctrl + Backspace</strong> → 删除整词</li>
<li><strong>Shift + ↑&#x2F;↓</strong> → 按行选择文本</li>
<li><strong>Ctrl + D</strong> → 多行选中相同内容（支持 VS Code 等编辑器）</li>
</ol>
<hr>
<h3 id="9-快速启动应用"><a href="#9-快速启动应用" class="headerlink" title="9. 快速启动应用"></a><strong>9. 快速启动应用</strong></h3><p> <strong>场景</strong> ：无需鼠标打开常用工具</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Win + R</strong> → 打开“运行”窗口</li>
<li>输入命令（如 <code>notepad</code>、<code>calc</code>、<code>cmd</code>）→ <strong>Enter</strong></li>
<li><strong>Win + 数字键</strong> → 打开任务栏固定应用（如 Win+1 打开第一个图标应用）</li>
</ol>
<hr>
<h3 id="10-批量文件重命名"><a href="#10-批量文件重命名" class="headerlink" title="10. 批量文件重命名"></a><strong>10. 批量文件重命名</strong></h3><p> <strong>场景</strong> ：整理照片或文档</p>
<ul>
<li><strong>操作流程</strong> ：</li>
</ul>
<ol>
<li><strong>Ctrl + A</strong> → 全选文件</li>
<li><strong>F2</strong> → 输入新名称（如 <code>旅行照片(1).jpg</code>）</li>
<li><strong>Enter</strong> → 系统自动批量编号</li>
</ol>
<h3 id="通用快捷键"><a href="#通用快捷键" class="headerlink" title="通用快捷键"></a><strong>通用快捷键</strong></h3><ul>
<li><strong>Ctrl + C</strong> ：复制选中内容</li>
<li><strong>Ctrl + X</strong> ：剪切选中内容</li>
<li><strong>Ctrl + V</strong> ：粘贴内容</li>
<li><strong>Ctrl + Z</strong> ：撤销上一步操作</li>
<li><strong>Ctrl + Y</strong> ：恢复撤销的操作</li>
<li><strong>Ctrl + A</strong> ：全选当前页面&#x2F;文档内容</li>
<li><strong>Ctrl + S</strong> ：保存当前文件</li>
<li><strong>Ctrl + P</strong> ：打开打印窗口</li>
<li><strong>Ctrl + F</strong> ：打开查找功能（搜索当前内容）</li>
<li><strong>Ctrl + N</strong> ：新建窗口&#x2F;文档</li>
<li><strong>Alt + Tab</strong> ：切换已打开的应用程序</li>
<li><strong>Alt + F4</strong> ：关闭当前窗口或程序</li>
<li><strong>Win（Windows 徽标键）</strong> ：打开&#x2F;关闭开始菜单</li>
</ul>
<hr>
<h3 id="窗口与桌面管理"><a href="#窗口与桌面管理" class="headerlink" title="窗口与桌面管理"></a><strong>窗口与桌面管理</strong></h3><ul>
<li><strong>Win + D</strong> ：显示&#x2F;隐藏桌面（快速最小化所有窗口）</li>
<li><strong>Win + E</strong> ：打开文件资源管理器</li>
<li><strong>Win + L</strong> ：锁定电脑（快速切换用户或进入锁屏）</li>
<li><strong>Win + M</strong> ：最小化所有窗口</li>
<li><strong>Win + Shift + M</strong> ：还原最小化的窗口</li>
<li><strong>Win + ←&#x2F;→&#x2F;↑&#x2F;↓</strong> ：将窗口贴靠到屏幕左&#x2F;右&#x2F;上&#x2F;下半部分</li>
<li><strong>Win + Tab</strong> ：打开任务视图（查看虚拟桌面和近期活动）</li>
<li><strong>Win + Ctrl + D</strong> ：创建新虚拟桌面</li>
<li><strong>Win + Ctrl + ←&#x2F;→</strong> ：切换虚拟桌面</li>
<li><strong>Win + +</strong> ：打开放大镜并放大屏幕</li>
<li><strong>Win + Esc</strong> ：关闭放大镜</li>
</ul>
<hr>
<h3 id="文件资源管理器"><a href="#文件资源管理器" class="headerlink" title="文件资源管理器"></a><strong>文件资源管理器</strong></h3><ul>
<li><strong>Ctrl + Shift + N</strong> ：新建文件夹</li>
<li><strong>Alt + Enter</strong> ：查看选中文件&#x2F;文件夹的属性</li>
<li><strong>F2</strong> ：重命名选中文件&#x2F;文件夹</li>
<li><strong>F5</strong> ：刷新当前窗口</li>
<li><strong>Alt + ←&#x2F;→</strong> ：后退&#x2F;前进到上一个文件夹</li>
<li><strong>Alt + D</strong> ：定位到地址栏（可直接输入路径）</li>
<li><strong>Ctrl + Shift + Esc</strong> ：直接打开任务管理器</li>
</ul>
<hr>
<h3 id="浏览器快捷键（适用于-Chrome-Edge-等）"><a href="#浏览器快捷键（适用于-Chrome-Edge-等）" class="headerlink" title="浏览器快捷键（适用于 Chrome&#x2F;Edge 等）"></a><strong>浏览器快捷键（适用于 Chrome&#x2F;Edge 等）</strong></h3><ul>
<li><strong>Ctrl + T</strong> ：新建标签页</li>
<li><strong>Ctrl + W</strong> ：关闭当前标签页</li>
<li><strong>Ctrl + Shift + T</strong> ：恢复最近关闭的标签页</li>
<li><strong>Ctrl + Tab</strong> ：切换到下一个标签页</li>
<li><strong>Ctrl + Shift + Tab</strong> ：切换到上一个标签页</li>
<li><strong>Ctrl + H</strong> ：打开历史记录</li>
<li><strong>Ctrl + J</strong> ：打开下载列表</li>
<li><strong>Ctrl + R &#x2F; F5</strong> ：刷新页面</li>
<li><strong>Ctrl + F</strong> ：在页面内搜索关键词</li>
</ul>
<hr>
<h3 id="文本编辑相关"><a href="#文本编辑相关" class="headerlink" title="文本编辑相关"></a><strong>文本编辑相关</strong></h3><ul>
<li><strong>Ctrl + B</strong> ：加粗文本（支持部分编辑器）</li>
<li><strong>Ctrl + I</strong> ：斜体文本（支持部分编辑器）</li>
<li><strong>Ctrl + U</strong> ：添加下划线（支持部分编辑器）</li>
<li><strong>Ctrl + ←&#x2F;→</strong> ：按单词移动光标</li>
<li><strong>Ctrl + Backspace</strong> ：删除前一个单词</li>
<li><strong>Shift + ←&#x2F;→&#x2F;↑&#x2F;↓</strong> ：按字符或行选择文本</li>
</ul>
<hr>
<h3 id="截图与录屏"><a href="#截图与录屏" class="headerlink" title="截图与录屏"></a><strong>截图与录屏</strong></h3><ul>
<li><strong>Win + Shift + S</strong> ：打开截图工具（区域截图）</li>
<li><strong>Win + Alt + R</strong> ：开始&#x2F;停止屏幕录制（需开启 Xbox Game Bar）</li>
<li><strong>PrtScn</strong> ：截取全屏并保存到剪贴板</li>
<li><strong>Win + PrtScn</strong> ：截取全屏并自动保存到“图片”文件夹</li>
</ul>
<hr>
<h3 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a><strong>高级操作</strong></h3><ul>
<li><strong>Win + R</strong> ：打开“运行”对话框（输入命令如 <code>cmd</code>、<code>msconfig</code> 等）</li>
<li><strong>Win + X</strong> ：打开快捷菜单（类似右键开始按钮）</li>
<li><strong>Win + I</strong> ：打开系统设置</li>
<li><strong>Ctrl + Shift + Esc</strong> ：直接打开任务管理器（跳过 Ctrl+Alt+Del）</li>
<li><strong>Win + Ctrl + Shift + B</strong> ：重置显卡驱动（黑屏时尝试恢复）</li>
</ul>
<hr>
<h3 id="其他实用快捷键"><a href="#其他实用快捷键" class="headerlink" title="其他实用快捷键"></a><strong>其他实用快捷键</strong></h3><ul>
<li><strong>Win + V</strong> ：打开剪贴板历史记录（需在设置中启用）</li>
<li><strong>Win + .（句号）</strong> ：打开表情符号面板</li>
<li><strong>Win + P</strong> ：切换投影模式（多显示器设置）</li>
<li><strong>Alt + F8</strong> ：在登录界面显示密码（需提前输入）</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化界面生成器</title>
    <url>/2025/02/07/%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<h2 id="大屏生成器需求分析文档"><a href="#大屏生成器需求分析文档" class="headerlink" title="大屏生成器需求分析文档"></a>大屏生成器需求分析文档</h2><blockquote>
<p>构建一个可视化开发大屏可视化系统的系统，这个系统要面向两种人员：<strong>工程</strong>（不懂代码的） <strong>研发</strong>（会编写代码的），这个系统的要求是工程要能够简单的通过拖拽来配置出来页面，比较容易绑定数据；对于研发则是工程无法实现的需求要研发介入来实现。最终目标是希望工程来实现大部分低难度的需求，研发来实现比较复杂的需求。整体的流程是 一个新项目-&gt;工程根据需求创建初版-&gt;解决不了的交给研发代码来实现-&gt;给用户演示和交流-&gt;新需求工程继续迭代-&gt;处理不了的需求再交由研发来做-&gt;成果再交给用户…就这样一直迭代到项目结束。我现在的最大的顾虑是 研发通过代码实现的部分会不会造成工程那边无法使用，工程的使用会不会影响研发的代码。</p>
</blockquote>
<h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><ol>
<li>面向工程而非开发</li>
<li>要维护的是代码。</li>
<li>工程使用必须要简单才会有人用，过于繁杂会很难推行。</li>
<li>仅限于展示为主的项目，交互不能多。</li>
</ol>
<h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><pre class="mermaid">flowchart TD
    A(新项目) --> B["工程根据需求创建初版"]
    B --> C{"能否解决?"}
    C -->|是| D["给用户演示/交流"]
    C -->|否| E["研发代码实现"]
    E --> D
    D --> F{"是否有新需求?"}
    F -->|是| G["工程继续迭代"]
    F -->|否| H(项目结束)
    G --> I{"能否解决?"}
    I -->|是| D
    I -->|否| E</pre>

<h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>工程的参数要简单，研发的可编辑性要强，所以 工程使用的 组件是 对研发使用组件的二次封装，给工程用的只允许有少量可选配置不允许自定义值。</p>
<p>研发用来进行复杂需求实现的  是一个限制很少的组件的基础上开发的。</p>
<p>为了架构清晰，要分为公共组件和项目组件。</p>
<p>当项目组件成熟后可以将其推送到公共组件的范围内。</p>
<p>这个项目需要角色和权限管理。</p>
<p>这个项目需要版本控制和工程能够使用的版本控制。</p>
<p>这个项目要能够让工程自己出更新。</p>
<p>数据的对接我认为单独做一个数据仓库，当数据更新时，将对和这个数据关联的组件进行更新消息推送。然后单独弄个数据层去获取数据然后送往数据仓库，这个数据层就可以以各种各样的方式获取数据。这个就要定好接口或者说是协议。</p>
<p>目前我的想法就是：最底层一张画布，工程要对整个画布进行布局，这个布局使用grid布局,可以让其可视化的使用。工程使用封装好的容器组件来将后续的工作限制在这个容器内，容器内划分图层，每一层可以使用布局组件，这样可以实现较为复杂的功能，然后最小的零件是封装好的文本组件，图片组件，Echarts组件，表格组件等等。不要细化到标签，最小的单位就是组件，无论这个组件是负责的还是简单到就一个div。</p>
<p>最终工程编辑好的起始就是代码，一份以组件为单位的有层级的代码。研发也去修改的是代码，这样避免最终无法维护。现在的难点就是如何让其能够生成代码，最终工程在编辑的时候还能渲染出来。渲染的还要和最终的一模一样。</p>
<p>前端代码使用Vue。</p>
<h2 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h2><p><a href="https://github.com/taowen/awesome-lowcode">taowen&#x2F;awesome-lowcode: 国内低代码平台从业者交流</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/451340998">从实现原理看低代码 - 知乎</a></p>
<p><a href="https://juejin.cn/post/6989983085345374222">开源低代码平台开发实践一：低代码开发探讨与技术选型</a></p>
<p><a href="https://juejin.cn/post/7205361008272326716">实战，一个高扩展、可视化低代码前端，详实、完整</a></p>
<p>低代码引擎</p>
<p><a href="https://opentiny.design/tiny-engine#/home">TinyEngine 低代码引擎 —— 使能开发者定制低代码平台</a></p>
<p><a href="https://lowcode-engine.cn/site/docs/guide/quickStart/intro">简介 | Low-Code Engine</a></p>
<p><a href="https://lowcode-engine.cn/site/docs/specs/lowcode-spec">《低代码引擎搭建协议规范》 | Low-Code Engine</a></p>
<p><a href="https://lowcode-engine.cn/site/docs/specs/material-spec">《低代码引擎物料协议规范》 | Low-Code Engine</a></p>
<p><a href="https://lowcode-engine.cn/site/docs/specs/assets-spec">《低代码引擎资产包协议规范》 | Low-Code Engine</a></p>
<p><a href="https://gitee.com/newgateway/vtj#https://gitee.com/link?target=https%3A%2F%2Flcdp.vtj.pro">VTJ: 🔥 基于 Vue3 + Typescript 的低代码页面可视化设计器。内置低代码引擎、渲染器和代码生成器，面向前端开发者，开箱即用。 无缝嵌入本地开发工程，不改变前端开发流程和编码习惯。</a></p>
<p>面相前端开发的。</p>
<p>低代码平台</p>
<p><a href="https://github.com/AnsGoo/openDataV">AnsGoo&#x2F;openDataV: OpenDataV 是一个纯前端的拖拽式、可视化、低代码数据可视化🌈开发平台，你可以用它自由的拼接成各种✨炫酷的大屏，同时支持用户方便的开发自己的组件并接入平台。</a></p>
<p><a href="https://gitee.com/gcpaas/DataRoom">DataRoom: 🔥基于Vue的大屏可视化设计器，前后端一体化解决方案，几十种炫酷图表，支持多种数据来源接入，适用于大屏、低代码、BI场景，使用简单，代码完全开源。</a></p>
<p>图层式布局</p>
<p><a href="https://gitee.com/wurong19870715/formDesigner#github-%E5%9C%B0%E5%9D%80">formDesigner: 基于vue+ElementUI的表单设计器，让表单拖拽更加简单方便。想做功能最全的表单设计器</a></p>
<p>表单设计器，没有出码选项，是通过渲染JSON配置来实现可视化。</p>
<p><a href="https://ai.goviewlink.com/saas/">GoView Pro - 官网</a></p>
<p><a href="https://mtruning.club/guide/start/">引导 | GoView 说明文档</a></p>
<p>图层式布局，图层布局的问题在于，研发很难去修改。最好使用布局容器配合图层。</p>
<p><a href="https://avuejs.com/">Avue</a></p>
<p>图层式的不方便使用。</p>
<p><a href="https://form.making.link/basic-version/#/zh-CN/">form-marking</a></p>
<p>表单设计配置成JSON</p>
<p><a href="http://datav.jiaminghi.com/guide/">介绍 | DataV</a></p>
<p>大屏组件库</p>
]]></content>
      <categories>
        <category>需求</category>
      </categories>
      <tags>
        <tag>可视化</tag>
        <tag>低代码</tag>
        <tag>需求</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器开发工具</title>
    <url>/2025/02/07/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="浏览器开发工具"><a href="#浏览器开发工具" class="headerlink" title="浏览器开发工具"></a>浏览器开发工具</h2><p><strong>官方文档:</strong><br><a href="https://developer.chrome.google.cn/docs/devtools/overview?hl=zh-cn">概览  |  Chrome DevTools  |  Chrome for Developers</a></p>
<h3 id="打开开发工具"><a href="#打开开发工具" class="headerlink" title="打开开发工具"></a>打开开发工具</h3><ol>
<li>快捷键开启：<ul>
<li>F12</li>
<li>Ctrl+Shift+I</li>
<li>Cmd+Opt+I</li>
</ul>
</li>
<li>浏览器菜单入口：<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738983652456.png" alt="1738983652456"></li>
<li>右键菜单 -&gt; 检查：<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738983812265.png" alt="1738983812265"></li>
</ol>
<h3 id="面板简介"><a href="#面板简介" class="headerlink" title="面板简介"></a>面板简介</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984373415.png" alt="1738984373415"></p>
<h3 id="切换中英文"><a href="#切换中英文" class="headerlink" title="切换中英文"></a>切换中英文</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984551719.png" alt="1738984551719"><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984585246.png" alt="1738984585246"></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984842051.png" alt="1738984842051"><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984670816.png" alt="1738984670816"><br><strong>注意事项:</strong> 在修改语言后必须要关闭开发工具重新打开才会生效。<br><strong>最终效果:</strong><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738984736471.png" alt="1738984736471"></p>
<h3 id="开发工具停靠"><a href="#开发工具停靠" class="headerlink" title="开发工具停靠"></a>开发工具停靠</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738985281998.png" alt="1738985281998"><br>主要分为两种停靠方式：</p>
<ol>
<li>单独窗口,开发工具在页面的上方显示，不会影响页面的大小。</li>
<li>侧边停靠，开发工具在页面的左侧显示，会挤压页面内容。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738985395005.png" alt="1738985395005"><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738985410940.png" alt="1738985410940"></li>
</ol>
<h2 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h2><ol>
<li>打开开发工具</li>
<li>右键刷新按钮</li>
<li>选择清空缓存并硬性重新加载<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738986018196.png" alt="1738986018196"></li>
</ol>
<blockquote>
<p>清除缓存目的就是为了应用最新的文件</p>
</blockquote>
<p><strong>注意事项:</strong> 强制刷新（Ctrl+F5）不会清除缓存。<br><strong>常见应用场景：</strong><br>在更新文件后，需要清除缓存。</p>
<h2 id="Elements-元素"><a href="#Elements-元素" class="headerlink" title="Elements(元素)"></a>Elements(元素)</h2><p><a href="https://developer.chrome.google.cn/docs/devtools/elements?hl=zh-cn">元素面板概览  |  Chrome DevTools  |  Chrome for Developers</a></p>
<blockquote>
<p>在点击<strong>元素</strong>选项后，可以看到页面的结构，包括HTML、CSS。</p>
</blockquote>
<p>下图就是Elements包含的内容：<br>左侧：DOM树<br>右侧：选中节点对应的样式<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738986886771.png" alt="1738986886771"></p>
<h4 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h4><ol>
<li><p>点击选择元素（按钮&#x2F;文本&#x2F;图片等）</p>
<blockquote>
<p>需要从页面的某个元素查看其dom结构。</p>
</blockquote>
<p>操作步骤：</p>
<ol>
<li>点击元素</li>
<li>右键选择“检查”</li>
<li>选择“检查元素”</li>
<li>会自动定位到该元素的dom结构 会使用浅蓝色标记出来<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738987043412.png" alt="1738987043412"></li>
</ol>
</li>
<li><p>悬停高亮功能<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738991446720.png" alt="1738991446720"><br>当点选了检查按钮后，会出现悬停高亮功能，可以看到鼠标悬停在哪个元素上，便可以快速定位到该元素。<br>DOM树和样式面板都会随着鼠标的移动实时更新。</p>
</li>
<li><p>搜索DOM元素（Ctrl+F）<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738991822569.png" alt="1738991822569"></p>
</li>
</ol>
<h4 id="样式调试"><a href="#样式调试" class="headerlink" title="样式调试"></a>样式调试</h4><ol>
<li><p>样式的查看</p>
<blockquote>
<p>样式是页面的美观和功能的实现，好比装修 div等元素就是房间的框架 样式就是房间的装修。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738992030807.png" alt="1738992030807"></p>
</blockquote>
</li>
<li><p>查看计算样式（Computed）</p>
<blockquote>
<p>计算样式是页面最终呈现的样式，是页面样式的计算结果。<br>一个元素可能有多个同名的样式，计算样式就是最终应用到元素上的样式。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738992140274.png" alt="1738992140274"></p>
</blockquote>
</li>
<li><p>CSS属性修改</p>
<ul>
<li><p>禁用和启用样式</p>
<blockquote>
<p>当鼠标放在样式上，前方会出现一个勾选框，勾中就是使用这个样式，没勾中就是禁用这个样式。</p>
</blockquote>
<p><strong>注意事项：</strong>这个例子是对class的属性修改会影响所有应用的这个class的元素<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738992319577.png" alt="1738992319577"></p>
</li>
<li><p>添加样式<br>鼠标在大括号内点击，可以添加新的样式属性。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738992536609.png" alt="1738992536609"><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738992552019.png" alt="1738992552019"><br>这样就可以添加css样式了。<br><strong>注意事项：</strong>最上方的 <code>element.style</code>是元素的行内样式只对元素本身生效，对class的样式修改会影响所有应用的这个class的元素。</p>
</li>
<li><p>样式状态解释<br>除了一下样式是正常样式，其他都是非正常样式。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738994161971.png" alt="1738994161971"><br>具体可参考：<br><a href="https://developer.chrome.google.cn/docs/devtools/css/issues?hl=zh-cn">查找无效、已替换、无效和其他 CSS  |  Chrome DevTools  |  Chrome for Developers</a></p>
</li>
</ul>
</li>
<li><p>样式过滤<br>最上方有过滤输入框：<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738994305869.png" alt="1738994305869"></p>
<blockquote>
<p>我需要过滤出包含color属性的样式，输入color即可，color都会被浅蓝色标记出来。</p>
</blockquote>
</li>
</ol>
<h3 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h3><h4 id="1-图片或iframe不显示"><a href="#1-图片或iframe不显示" class="headerlink" title="1.图片或iframe不显示"></a>1.图片或iframe不显示</h4><blockquote>
<p>当现场的某个图片或者iframe不显示</p>
</blockquote>
<p>如：</p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739520627232.png" alt="1739520627232"></p>
<p>具体的操作思路如下：</p>
<ol>
<li>清除缓存再次刷新</li>
<li>检索元素找到对应的img标签,Ctrl+F 搜索文件名称，找到src这个路径</li>
<li>按照这个文件和ip端口组合新开一个标签页去测试能否看见图片</li>
<li>根据测试结果分情况</li>
</ol>
<ul>
<li>找不见图片</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739520935588.png" alt="1739520935588"></p>
<ul>
<li>找得到图片</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739520954966.png" alt="1739520954966"></p>
<ol start="5">
<li>现在分为两种情况</li>
</ol>
<ul>
<li>标签页能显示图片但是项目中不显示：可能原因有 css的样式将其隐藏没显示 <code>display: none;</code>  <code>visibility: hidden;</code> <code>opacity: 0; </code></li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739521160454.png" alt="1739521160454"></p>
<blockquote>
<p>这种情况需要让研发更改样式重新出更新。</p>
</blockquote>
<ul>
<li>标签页中也无法正常显示图片</li>
</ul>
<blockquote>
<p>这种情况就是浏览器没能够正确加载到文件。</p>
</blockquote>
<p> 这种按照以下步骤来查。<br> 1.检查项目服务器上的文件是否存在。<br> 2.检查标签的src和服务器的文件路径是否正确。<br> 3.检查路径和服务器的大小写是否区分。Linux 严格区分大小写，windows不区分。有时候就会出现研发环境正常而现场环境下不显示的情况。</p>
<ol start="6">
<li>依然无法解决的，联系研发排查原因。</li>
</ol>
<blockquote>
<p>将前5步的测试结果 如 文件是加载了没显示还是 没加载  ，核对路径是否正确，大小写是否区分。做详细说明。</p>
</blockquote>
<p><strong>备注：</strong></p>
<p>iframe的步骤和图片的同理</p>
<h4 id="2-替换图片"><a href="#2-替换图片" class="headerlink" title="2.替换图片"></a>2.替换图片</h4><blockquote>
<p>在大屏项目中有些内容会被做成图片，有时需要替换图片，替换图片需要找到图片的路径，图片路径就按照上方的获取图片路径的步骤即可。</p>
</blockquote>
<h4 id="3-样式错位"><a href="#3-样式错位" class="headerlink" title="3.样式错位"></a>3.样式错位</h4><p>如下图：</p>
<ul>
<li>正常</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739522970654.png" alt="1739522970654"></p>
<ul>
<li>异常<blockquote>
<p>搜索条件最下方的文字不见了。</p>
</blockquote>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739523048776.png" alt="1739523048776"></p>
<p>排查步骤：</p>
<ol>
<li>Ctrl+F  搜索消失的文本</li>
</ol>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739523228870.png" alt="1739523228870"></p>
<p>可以看见文字是被下方的表格给盖住了。</p>
<p>解决方案：</p>
<blockquote>
<p>联系研发做适配。</p>
</blockquote>
<h2 id="Console-控制台"><a href="#Console-控制台" class="headerlink" title="Console(控制台)"></a>Console(控制台)</h2><p><a href="https://developer.chrome.google.cn/docs/devtools/console?hl=zh-cn">控制台概览  |  Chrome DevTools  |  Chrome for Developers</a><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738996295175.png" alt="1738996295175"></p>
<h3 id="运行js代码"><a href="#运行js代码" class="headerlink" title="运行js代码"></a>运行js代码</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738995829988.png" alt="1738995829988"></p>
<h3 id="实际应用-1"><a href="#实际应用-1" class="headerlink" title="实际应用"></a>实际应用</h3><blockquote>
<p>异常信息都会在Console中打印，当网站遇见任何异常问题的时候都需要先看Console的异常信息。</p>
</blockquote>
<p>常见的异常信息有9种：</p>
<h4 id="1-严重影响页面正常显示（关键性错误）"><a href="#1-严重影响页面正常显示（关键性错误）" class="headerlink" title="1. 严重影响页面正常显示（关键性错误）"></a><strong>1. 严重影响页面正常显示（关键性错误）</strong></h4><table>
<thead>
<tr>
<th>错误类型</th>
<th>影响场景示例</th>
<th>后果</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>SyntaxError</code></strong></td>
<td>代码中存在语法错误（如缺少括号、重复声明变量）</td>
<td><strong>脚本完全无法执行，页面空白</strong></td>
</tr>
<tr>
<td><strong><code>ReferenceError</code></strong></td>
<td>引用未声明的变量（如 <code>$ is not defined</code>）</td>
<td><strong>依赖该变量的后续逻辑全部中断</strong></td>
</tr>
<tr>
<td><strong><code>NetworkError</code></strong></td>
<td>关键资源加载失败（如 <code>404</code> 导致 CSS&#x2F;JS 缺失）</td>
<td><strong>页面布局错乱或功能完全失效</strong></td>
</tr>
<tr>
<td><strong><code>RangeError</code></strong></td>
<td>栈溢出（如无限递归）</td>
<td><strong>脚本崩溃，页面交互停止</strong></td>
</tr>
<tr>
<td><strong><code>SecurityError</code></strong></td>
<td>跨域请求被阻止（如关键接口无法访问）</td>
<td><strong>核心数据无法加载，页面功能瘫痪</strong></td>
</tr>
<tr>
<td><strong><code>DOMException</code></strong></td>
<td>关键 DOM 操作失败（如插入无效节点导致页面结构损坏）</td>
<td><strong>元素渲染异常，页面部分空白</strong></td>
</tr>
</tbody></table>
<h4 id="2-不影响页面正常显示（非关键性错误）"><a href="#2-不影响页面正常显示（非关键性错误）" class="headerlink" title="2. 不影响页面正常显示（非关键性错误）"></a><strong>2. 不影响页面正常显示（非关键性错误）</strong></h4><table>
<thead>
<tr>
<th>错误类型</th>
<th>影响场景示例</th>
<th>后果</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>TypeError</code></strong></td>
<td>变量类型错误（如 <code>null.name</code> 或 <code>undefined.forEach</code>）</td>
<td><strong>仅当前操作失败，页面其他部分正常</strong></td>
</tr>
<tr>
<td><strong><code>Uncaught (in promise)</code></strong></td>
<td>未处理的异步错误（如非关键接口请求失败）</td>
<td><strong>局部功能异常，不影响整体渲染</strong></td>
</tr>
<tr>
<td><strong><code>EvalError</code></strong></td>
<td><code>eval()</code> 被 CSP 阻止（通常用于非核心逻辑）</td>
<td><strong>动态功能失效，静态内容仍可展示</strong></td>
</tr>
</tbody></table>
<p> Console 中常见的异常类型及具体场景，补充了更多你可能遇到的错误：</p>
<hr>
<h4 id="1-TypeError（类型错误）"><a href="#1-TypeError（类型错误）" class="headerlink" title="1.TypeError（类型错误）"></a><strong>1.<code>TypeError</code>（类型错误）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught TypeError: Cannot read property &#39;name&#39; of null</code></li>
<li><code>Uncaught TypeError: obj.forEach is not a function</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>调用 <code>null</code>&#x2F;<code>undefined</code> 的方法（如 <code>user.getName()</code>，但 <code>user</code> 为 <code>null</code>）。</li>
<li>变量类型不符合预期（如对非数组对象调用 <code>forEach</code>）。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739755039535.png" alt="1739755039535"></p>
<h4 id="2-SyntaxError（语法错误）"><a href="#2-SyntaxError（语法错误）" class="headerlink" title="2. SyntaxError（语法错误）"></a><strong>2. <code>SyntaxError</code>（语法错误）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught SyntaxError: Unexpected token &#39;&#125;&#39;</code></li>
<li><code>Uncaught SyntaxError: Identifier &#39;xxx&#39; has already been declared</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>缺少括号、引号不匹配（如 <code>const arr = [1, 2, 3;</code>）。</li>
<li>重复声明变量（如 <code>let x = 1; let x = 2;</code>）。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739755306553.png" alt="1739755306553"></p>
<h4 id="3-NetworkError（网络错误）"><a href="#3-NetworkError（网络错误）" class="headerlink" title="3. NetworkError（网络错误）"></a><strong>3. <code>NetworkError</code>（网络错误）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Failed to load resource: net::ERR_CONNECTION_TIMED_OUT</code></li>
<li><code>Failed to load resource: the server responded with a status of 404 (Not Found)</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>资源路径错误（如 <code>script src=&quot;wrong-path.js&quot;</code>）。</li>
<li>服务端崩溃或未启动（如本地开发时后端服务未运行）。</li>
</ul>
</li>
</ul>
<p>超时：<code>Timeout Error</code></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739756354101.png" alt="1739756354101"></p>
<p>跨域：</p>
<p>标志性单词 <code>CORS</code> , <code>Access-Control-Allow-Origin</code></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739756530762.png" alt="1739756530762"></p>
<p>iframe  不允许嵌入</p>
<p><a href="http://doc.ysh.com/docs/faq/faq-1fgiup14locgk">X-Frame-Options - Powered by MinDoc</a></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739756666868.png" alt="1739756666868"></p>
<h4 id="4-DOMException（DOM-操作异常）"><a href="#4-DOMException（DOM-操作异常）" class="headerlink" title="4. DOMException（DOM 操作异常）"></a><strong>4. <code>DOMException</code>（DOM 操作异常）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>DOMException: Failed to execute &#39;appendChild&#39; on &#39;Node&#39;: The new child element contains the parent.</code></li>
<li><code>DOMException: The operation is insecure.</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>循环嵌套 DOM 节点（如将父元素插入到子元素中）。</li>
<li>跨域访问敏感 API（如 <code>navigator.clipboard.writeText</code> 未在 HTTPS 下调用）。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739755594199.png" alt="1739755594199"></p>
<h4 id="5-Uncaught-in-promise-（未处理的-Promise-拒绝）"><a href="#5-Uncaught-in-promise-（未处理的-Promise-拒绝）" class="headerlink" title="5. Uncaught (in promise)（未处理的 Promise 拒绝）"></a><strong>5. <code>Uncaught (in promise)</code>（未处理的 Promise 拒绝）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught (in promise) Error: Request failed with status code 500</code></li>
<li><code>Uncaught (in promise) TypeError: response.json is not a function</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li><code>fetch</code> 或 <code>axios</code> 请求未处理 <code>catch</code>（如 <code>fetch(url).then(...)</code> 但未处理异常）。</li>
<li>异步操作中未校验响应格式。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739756930112.png" alt="1739756930112"></p>
<h4 id="6-RangeError（范围错误，非栈溢出场景）"><a href="#6-RangeError（范围错误，非栈溢出场景）" class="headerlink" title="6. RangeError（范围错误，非栈溢出场景）"></a><strong>6. <code>RangeError</code>（范围错误，非栈溢出场景）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught RangeError: Invalid array length</code></li>
<li><code>Uncaught RangeError: Maximum call stack size exceeded</code>（栈溢出）</li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>创建非法长度的数组（如 <code>new Array(-1)</code>）。</li>
<li>递归未设置终止条件导致栈溢出。</li>
</ul>
</li>
</ul>
<p>标志性单词 <code>Maximum</code></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739755646172.png" alt="1739755646172"></p>
<h4 id="7-SecurityError（安全策略冲突）"><a href="#7-SecurityError（安全策略冲突）" class="headerlink" title="7. SecurityError（安全策略冲突）"></a><strong>7. <code>SecurityError</code>（安全策略冲突）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>SecurityError: Blocked a frame with origin &quot;http://localhost:3000&quot; from accessing a cross-origin frame.</code></li>
<li><code>SecurityError: The operation is insecure.</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>跨域访问 <code>iframe</code> 内容（如父页面与子页面域名不同）。</li>
<li>尝试读取 <code>HttpOnly</code> 的 Cookie。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739755686952.png" alt="1739755686952"></p>
<h4 id="8-ReferenceError（引用错误）"><a href="#8-ReferenceError（引用错误）" class="headerlink" title="8. ReferenceError（引用错误）"></a><strong>8. <code>ReferenceError</code>（引用错误）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught ReferenceError: $ is not defined</code>（未引入 jQuery）</li>
<li><code>Uncaught ReferenceError: Cannot access &#39;x&#39; before initialization</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>变量未声明直接使用（如 <code>console.log(undeclaredVar)</code>）。</li>
<li>在 <code>let</code>&#x2F;<code>const</code> 声明前访问变量（暂时性死区）。</li>
</ul>
</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739756557926.png" alt="1739756557926"></p>
<h4 id="9-EvalError（eval-函数错误）"><a href="#9-EvalError（eval-函数错误）" class="headerlink" title="9. EvalError（eval 函数错误）"></a><strong>9. <code>EvalError</code>（eval 函数错误）</strong></h4><ul>
<li><strong>错误示例</strong>：<ul>
<li><code>Uncaught EvalError: call to eval() blocked by CSP</code></li>
</ul>
</li>
<li><strong>触发场景</strong>：<ul>
<li>内容安全策略（CSP）禁止 <code>eval()</code> 执行。</li>
<li>动态执行未经验证的字符串代码。</li>
</ul>
</li>
</ul>
<h2 id="源代码-来源-Sources"><a href="#源代码-来源-Sources" class="headerlink" title="源代码&#x2F;来源(Sources)"></a>源代码&#x2F;来源(Sources)</h2><p><a href="https://developer.chrome.google.cn/docs/devtools/sources?hl=zh-cn">“来源”面板概览  |  Chrome DevTools  |  Chrome for Developers</a></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738997771344.png" alt="1738997771344"></p>
<h3 id="文件树"><a href="#文件树" class="headerlink" title="文件树"></a>文件树</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738998117184.png" alt="1738998117184"><br>文件树的构造如下：<br>从根目录开始 为TOP,按照窗口的嵌套关系进行嵌套。<br>每个网站下面的代码按照源代码的层进进行加载<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738998288933.png" alt="1738998288933"><br>选中一个文件后，可以看到文件内容，可以设置断点，调试代码。</p>
<h3 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h3><h4 id="断点设置"><a href="#断点设置" class="headerlink" title="断点设置"></a>断点设置</h4><ol>
<li>最简单的断点设置方式。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738998396222.png" alt="1738998396222"></li>
<li>条件断点设置。</li>
</ol>
<blockquote>
<p>在蓝色的断点上右键，点击修改断点，然后输入条件表达式。<br>适用于针对特定条件的调试。</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738998439528.png" alt="1738998439528"><br>    设置成功为黄色的断点<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738999382734.png" alt="1738999382734"></p>
<h4 id="断点调试-1"><a href="#断点调试-1" class="headerlink" title="断点调试"></a>断点调试</h4><blockquote>
<p>代码是一个个函数按照顺序进行执行的，当代码执行到断点处，会暂停，等待调试者的输入。<br>调试者可以查看变量的值，执行代码，查看调用栈等。<br>调试者可以设置断点，单步执行代码，跳过代码，继续执行等。</p>
</blockquote>
<h5 id="查看变量值"><a href="#查看变量值" class="headerlink" title="查看变量值"></a>查看变量值</h5><ol>
<li><p>鼠标悬停在变量上，会显示变量的值。</p>
<blockquote>
<p>如本图的id变量鼠标放上去即可显示</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738998956493.png" alt="1738998956493"></p>
</li>
<li><p>作用域处查看变量值。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738999033534.png" alt="1738999033534"></p>
</li>
<li><p>控制台输入变量名会打印出变量名的值。<br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738999089973.png" alt="1738999089973"></p>
</li>
<li><p>监视（Watch）功能。</p>
<blockquote>
<p>监视功能可以监视变量的变化，当变量的值发生变化时，会自动打印出来。</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1738999301590.png" alt="1738999301590"></p>
</li>
</ol>
<h5 id="逐步调试"><a href="#逐步调试" class="headerlink" title="逐步调试"></a>逐步调试</h5><blockquote>
<p>鼠标方上会有提示</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739000824114.png" alt="1739000824114"></p>
<ol>
<li><p>继续执行脚本 <code>F8</code></p>
<blockquote>
<p>按 <code>F8</code>，脚本会执行到下一个断点，如果没有断点，则执行完当前代码。</p>
</blockquote>
</li>
<li><p>跳过下一个函数调用 <code>F10</code></p>
<blockquote>
<p>按 <code>F10</code>，不会进入函数内部，而是直接执行下一行代码。</p>
</blockquote>
</li>
<li><p>进入下一个函数调用 <code>F11</code></p>
<blockquote>
<p>按 <code>F11</code>，会进入函数内部，可以查看函数内部变量的值，设置断点，逐步调试。</p>
</blockquote>
</li>
<li><p>退出当前函数 <code>Shift+F11</code></p>
<blockquote>
<p>按 <code>Shift+F11</code>，会退出当前函数，回到上一层函数。</p>
</blockquote>
</li>
<li><p><del>单步调试 <code>F9</code></del></p>
<blockquote>
<p><del>按 <code>F9</code>，和 <code>F11</code>类似，一般不用。</del></p>
</blockquote>
</li>
</ol>
<h2 id="网络（Network）"><a href="#网络（Network）" class="headerlink" title="网络（Network）"></a>网络（Network）</h2><p><a href="https://developer.chrome.google.cn/docs/devtools/network/overview?hl=zh-cn">“网络”面板：分析网络负载和资源  |  Chrome DevTools  |  Chrome for Developers</a></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739006204160.png" alt="1739006204160"></p>
<p><strong>列表：</strong></p>
<ul>
<li><strong>名称 Name</strong> ：HTTP 请求方法。</li>
<li><strong>状态 Status</strong> ：HTTP 响应代码。</li>
<li><strong>类型 Type</strong> ：资源类型。</li>
<li><strong>发起者 Intitator</strong> ：导致请求资源的原因。点击“发起者”列中的链接可前往导致请求的源代码。</li>
<li><strong>大小 Size</strong> ：通过网络传输的资源量。</li>
<li><strong>时间 Time</strong> ：请求所用时间。</li>
</ul>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739154603656.png" alt="1739154603656"></p>
<p><strong>点击列表的标题可以排序</strong></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739158003163.png" alt="1739158003163"></p>
<h3 id="导出-HAR文件"><a href="#导出-HAR文件" class="headerlink" title="导出 HAR文件"></a>导出 <code>HAR</code>文件</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739006281148.png" alt="1739006281148"></p>
<blockquote>
<p>点击图上按钮即可将当前的记录导出成HAR文件</p>
<p>研发拿到HAR文件就可以看到现场的网络请求记录</p>
</blockquote>
<h3 id="筛选"><a href="#筛选" class="headerlink" title="筛选"></a>筛选</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739006564112.png" alt="1739006564112"></p>
<ol>
<li>编号 <code>1</code>的筛选按钮为<strong>蓝色</strong>代表打开筛选功能会在下一行出现筛选选项</li>
<li>编号 <code>2</code>就是筛选的输入框，根据下方列表的名称筛选</li>
<li>编号 <code>3</code>是请求类型的选项<ul>
<li>Fetch\XHR: 是各种API请求</li>
<li>Doc: 是HTML文档请求</li>
<li>Css: 是CSS样式请求</li>
<li>JS: 是JavaScript脚本请求</li>
<li>Img: 是各种图片请求如：jpg、png、gif等</li>
<li>WS: 是WebSocket请求</li>
<li>Media: 是各种媒体请求如：音频、视频等</li>
<li>Font: 是字体文件请求</li>
</ul>
</li>
</ol>
<h3 id="请求详解"><a href="#请求详解" class="headerlink" title="请求详解"></a>请求详解</h3><p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739007155706.png" alt="1739007155706"><br><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739007245560.png" alt="1739007245560"></p>
<h4 id="标头-Headers"><a href="#标头-Headers" class="headerlink" title="标头(Headers)"></a>标头(Headers)</h4><pre><code>是http请求基础的请求信息和请求头以及响应头
</code></pre>
<h4 id="载荷-Payload"><a href="#载荷-Payload" class="headerlink" title="载荷(Payload)"></a>载荷(Payload)</h4><blockquote>
<p>载荷就是请求携带的一些参数</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156018771.png" alt="1739156018771"></p>
<h4 id="预览-Preview"><a href="#预览-Preview" class="headerlink" title="预览(Preview)"></a>预览(Preview)</h4><h4 id="响应-Response"><a href="#响应-Response" class="headerlink" title="响应(Response)"></a>响应(Response)</h4><blockquote>
<p>预览和响应一起说：响应就是请求返回的原始数据，预览就是对这个数据渲染后的结果。</p>
</blockquote>
<p>json:</p>
<blockquote>
<p>预览就可以展开来看</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156597854.png" alt="1739156597854"></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156613645.png" alt="1739156613645"></p>
<p>图片：</p>
<blockquote>
<p>响应就是二进制，预览就能看见图片</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156677527.png" alt="1739156677527"></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156715693.png" alt="1739156715693"></p>
<h4 id="启动器-Initiator"><a href="#启动器-Initiator" class="headerlink" title="启动器(Initiator)"></a>启动器(Initiator)</h4><blockquote>
<p>就是这个请求进行调用的时候的，函数调用栈，不重要。</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156763831.png" alt="1739156763831"></p>
<h4 id="Timing-时间"><a href="#Timing-时间" class="headerlink" title="Timing(时间)"></a>Timing(时间)</h4><blockquote>
<p>时间就是这个一个请求，总共用了多少时间，以及每步所用时间是多少。</p>
<p>常用于检查请求慢的时候：从列表的时间列排序，找到耗时最大的几个请求，然后针对这些请求查看他们具体的时间（下图），然后找这个请求哪个花费的时间最长，然后再找造成这个时间长的原因，一步一步的找到造成请求慢的根本原因。</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739156843158.png" alt="1739156843158"></p>
<ul>
<li><strong>加入队列</strong> 。浏览器会在连接开始之前以及在以下情况下将请求加入队列：</li>
<li>还有优先级更高的请求。请求优先级由资源类型以及其在文档中的位置等因素决定。如需了解详情，请参阅 <code>fetchpriority</code> 指南的<a href="https://web.developers.google.cn/articles/fetch-priority?hl=zh-cn#resource-priority">资源优先级部分</a>。</li>
<li>此来源已有 6 个 TCP 连接处于打开状态，这是上限。（仅适用于 HTTP&#x2F;1.0 和 HTTP&#x2F;1.1。）</li>
<li>浏览器正在磁盘缓存中暂时分配空间。</li>
<li><strong>已暂停</strong> 。连接开始后，请求可能会因<strong>队列</strong>中所述的任何原因而暂停。</li>
<li><strong>DNS 查找</strong> 。浏览器正在解析请求的 IP 地址。</li>
<li><strong>初始连接</strong> 。浏览器正在建立连接，包括 TCP 握手或重试以及协商 SSL。</li>
<li><strong>代理协商</strong> 。浏览器正在与<a href="https://en.wikipedia.org/wiki/Proxy_server">代理服务器</a>协商请求。</li>
<li><strong>已发送请求</strong> 。正在发送请求。</li>
<li><strong>ServiceWorker 准备工作</strong> 。浏览器正在启动服务工件。</li>
<li><strong>向 ServiceWorker 发出请求</strong> 。请求正在发送到服务工件。</li>
<li><strong>等待中 (TTFB)</strong> 。浏览器正在等待响应的第一个字节。TTFB 是“Time To First Byte”（收到第一个字节的时间）的缩写。此时间包括 1 次往返延迟时间和服务器准备响应所用的时间。</li>
<li><strong>内容下载</strong> 。浏览器会直接从网络或 Service Worker 接收响应。此值是读取响应正文所花费的总时间。大于预期值可能表示网络速度缓慢，或者浏览器正忙于执行其他工作，导致延迟读取响应。</li>
</ul>
<h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><blockquote>
<p>这个是http请求中携带的cookie以列表形式展示</p>
</blockquote>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739157717793.png" alt="1739157717793"></p>
<h3 id="实际应用-2"><a href="#实际应用-2" class="headerlink" title="实际应用"></a>实际应用</h3><h4 id="1-基础界面（场景：网页加载缓慢）"><a href="#1-基础界面（场景：网页加载缓慢）" class="headerlink" title="1. 基础界面（场景：网页加载缓慢）"></a>1. 基础界面（场景：网页加载缓慢）</h4><p><strong>操作步骤：</strong></p>
<ol>
<li>打开网页时按F12 → 点击”Network”标签</li>
<li>刷新页面查看加载过程</li>
</ol>
<p><strong>实际应用：</strong></p>
<ul>
<li>发现某个 <code>.js</code>文件加载时间过长（红色标记）</li>
<li>右键点击该请求 → “Block request domain”临时屏蔽</li>
<li>立即测试页面核心功能是否可用，定位问题文件</li>
</ul>
<h4 id="2-请求过滤（场景：图片加载失败）"><a href="#2-请求过滤（场景：图片加载失败）" class="headerlink" title="2. 请求过滤（场景：图片加载失败）"></a>2. 请求过滤（场景：图片加载失败）</h4><p><strong>典型场景：</strong><br>用户反馈某个产品图片无法显示</p>
<p><strong>排查步骤：</strong></p>
<ol>
<li><p>在筛选栏输入 <code>image</code></p>
</li>
<li><p>查看所有图片请求状态码：</p>
<ul>
<li>红色（4xx&#x2F;5xx）：服务器问题</li>
<li>灰色（已取消）：可能被广告拦截</li>
</ul>
</li>
<li><p>右键点击问题图片 → “Open in new tab”验证源文件</p>
</li>
<li><p>缓存验证（场景：更新未生效）</p>
</li>
</ol>
<p>**常见问题：<br>已发布新版本但用户看到旧内容</p>
<p>**解决方案：</p>
<ol>
<li>勾选”Disable cache”</li>
<li>查看文件响应头：<ul>
<li><code>Cache-Control</code>值是否合理</li>
<li>检查 <code>Last-Modified</code>日期</li>
</ul>
</li>
</ol>
<h4 id="3-跨域问题（场景：API调用失败）"><a href="#3-跨域问题（场景：API调用失败）" class="headerlink" title="3. 跨域问题（场景：API调用失败）"></a>3. 跨域问题（场景：API调用失败）</h4><p>**典型表现：<br>控制台出现CORS错误提示</p>
<p>**诊断方法：</p>
<ol>
<li>查看请求头是否携带 <code>Origin</code></li>
<li>检查响应头是否包含：<ul>
<li><code>Access-Control-Allow-Origin</code></li>
<li><code>Access-Control-Allow-Methods</code></li>
</ul>
</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote>
<p>页面白屏：优先查看红色状态码请求<br>数据错乱：检查Preview中的数据结构<br>功能失效：确认关键API请求是否正常发送</p>
</blockquote>
<h2 id="性能（Performance）"><a href="#性能（Performance）" class="headerlink" title="性能（Performance）"></a>性能（Performance）</h2><p><a href="https://developer.chrome.google.cn/docs/devtools/performance/overview?hl=zh-cn">Performance</a></p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739159180249.png" alt="1739159180249"></p>
<p>录制结束的样式如下：</p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739159314873.png" alt="1739159314873"></p>
<p>点击下载按钮，即可将性能分析的文件下载下来 ，如同网络的 <code>HAR</code>文件</p>
<p>点击后会出现两个选项，选择第一个（Save Trace）即可。两者的区分就是带不带注释而已</p>
<p><img src="/image/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1739159563507.png" alt="1739159563507"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>电网知识</title>
    <url>/2024/10/18/%E7%94%B5%E7%BD%91%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.dlzstp.com/entry">电知网</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/538591681">电力知识图谱：网络安全分区</a></p>
<p><a href="https://www.zhihu.com/column/c_1193928849044598784">能源信息化专栏</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/478597561">浅谈电网“N-1”准则 - 知乎</a></p>
<span id="more"></span>

<h1 id="网络分区"><a href="#网络分区" class="headerlink" title="网络分区"></a>网络分区</h1><p>总的有6个区，电力内网I-IV区+互联网大区+外网区</p>
<p>根据电力 二次系统的特点，划分为生产控制大区和管理信息大区。生产控制大区 分为控制区（安全区Ⅰ）和非控制区（安全区Ⅱ）。信息管理大区分为生产管理区（安全区Ⅲ）和管理信息区（安全区Ⅳ）。</p>
]]></content>
      <categories>
        <category>电网</category>
      </categories>
      <tags>
        <tag>电网</tag>
        <tag>业务</tag>
      </tags>
  </entry>
  <entry>
    <title>跨域</title>
    <url>/2024/11/08/%E8%B7%A8%E5%9F%9F/</url>
    <content><![CDATA[<h2 id="Cookie-Session-Token"><a href="#Cookie-Session-Token" class="headerlink" title="Cookie Session Token"></a>Cookie Session Token</h2><blockquote>
<p>三者都是由于http无状态属性 ，但是为了方便使用识别用户状态 ，所以需要每次请求带上标识符，标识符目前有三个版本 <code>Cookie </code> <code>Session</code> <code>Token</code></p>
</blockquote>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><blockquote>
<p>目前是将其作为 传递唯一标识的手段 </p>
</blockquote>
<p>特性：</p>
<ol>
<li>4KB限制</li>
<li>可被修改</li>
</ol>
<p>获取：</p>
<p>设置：</p>
<p>传递：</p>
<h2 id="跨域的概念"><a href="#跨域的概念" class="headerlink" title="跨域的概念"></a>跨域的概念</h2><h2 id="跨域对于cookie的影响"><a href="#跨域对于cookie的影响" class="headerlink" title="跨域对于cookie的影响"></a>跨域对于cookie的影响</h2><h2 id="跨域处理方法"><a href="#跨域处理方法" class="headerlink" title="跨域处理方法"></a>跨域处理方法</h2><p>代理</p>
<h2 id="浏览器权限限制总结"><a href="#浏览器权限限制总结" class="headerlink" title="浏览器权限限制总结"></a>浏览器权限限制总结</h2>]]></content>
      <categories>
        <category>前端</category>
        <category>浏览器</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>浏览器</tag>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>网络学习笔记</title>
    <url>/2024/12/03/%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="IP-子网掩码-路由-网关"><a href="#IP-子网掩码-路由-网关" class="headerlink" title="IP 子网掩码 路由 网关"></a>IP 子网掩码 路由 网关</h2><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><blockquote>
<p>唯一标识 IP4  32位</p>
</blockquote>
<h3 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h3><blockquote>
<p>子网掩码是一个32位的二进制值，用于将一个IP地址划分为网络部分和主机部分。</p>
<p>192.168.1.10 &amp; 255.255.255.0 &#x3D; 192.168.1.0<br>192.168.1.20 &amp; 255.255.255.0 &#x3D; 192.168.1.0</p>
<p>同一网段的可以直接通信</p>
</blockquote>
<p><strong>子网的作用：</strong></p>
<ol>
<li><strong>提高效率</strong> ：通过将网络划分为较小的子网，可以减少广播域的大小，从而减少网络拥塞和提高网络效率。</li>
<li><strong>简化管理</strong> ：较小的子网使得网络的管理更加简单。例如，如果网络被划分为多个子网，那么每个子网的配置和管理都可以独立进行，而不需要考虑整个网络的配置。</li>
<li><strong>提高安全性</strong> ：通过将敏感数据或设备放在单独的子网中，可以提高网络的安全性。这样，即使一个子网受到攻击，也不会影响到其他子网。</li>
<li><strong>支持更大规模的网络</strong> ：随着技术的发展和需求的增加，我们可以通过划分更多的子网来支持更大的网络规模。</li>
<li><strong>简化路由决策</strong> ：子网掩码使得路由器能够更有效地进行路由决策。当路由器接收到一个数据包时，它会查看目标IP地址的子网部分，然后根据路由表中的信息决定如何将这个数据包发送到正确的目的地。</li>
</ol>
<h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>物理设备，路由器负责执行路由决策，将数据包发送到正确的目的地。它根据目标IP地址和子网掩码，决定最佳的数据传输路径。</p>
<h2 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h2><blockquote>
<p>网关（Gateway）就是一个网络连接到另一个网络的“关口”。</p>
</blockquote>
<p>网关实质上是一个网络通向其他网络的IP地址。<br>比如有网络A和网络B，网络A的IP地址范围为 “192.168.1.1<del>192. 168.1.254”，子网掩码为255.255.255.0；<br>网络B的IP地址范围为“192.168.2.1</del>192.168.2.254”，子网掩码为255.255.255.0。<br>在没有路由器的情况下，两个网络之间是不能进行TCP&#x2F;IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，<br> TCP&#x2F;IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。<br>而要实现这两个网络之间的通信，则必须通过网关。<br>如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。<br>网络B向网络A转发数据包的过程也是如此。</p>
<h2 id="网络分层"><a href="#网络分层" class="headerlink" title="网络分层"></a>网络分层</h2><p>网线不属于任何一层。我觉得题主犯了一个错误，就是把物理层和物理设备或者说物理信号混为一谈了。</p>
<p>通信网的七层，只是七个抽象的层，只是对于通信的规则进行通行性的描述，不应该把某些实体的设备对应说是哪一层。你就说你的电脑吧，你用不同的软件，就可以对不同层的数据进行操作，你说它应该属于哪一层呢？物理层也只是对各种调制方式、检错方式等进行标准的描述，它也是抽象的，并不关系到你的实现或者设备上。</p>
<p>总之一点，七层都是没有实体的，它们只是对于你所通信的数据一些约定俗成的规则。它们处理的都是抽象数字，并不涉及模拟。不是因为它叫物理层，所以就和物理设备有关系。它这所以叫物理层，是因为它对数据传输的物理实现进行了定义。</p>
<p>所以可以这么认为，你在七层所处理的数据，其实都是数字的，在物理层上也是数字的，所以确确实实是比特流。但是在物理设备中，它肯定是模拟的，因为自然界中的东西都是模拟的，你永远也找不到一个0或者1出来，是吧？</p>
<p>题主要清楚一点，不要把物理设备和物理层混为一谈，整个七层所涉及的所有数据，都是物理设备一层层分析展开再打包合并了的。可以这么说，各层的意义其实都是人为的，它们本身在传输线或者设备内部都是模拟信号，只不过通过人为的规定，把他们规定成了有意义的比特流。</p>
<p>总结就是，传输线只是传输物理信号的物理设备，并不是物理层的东西。任何信号，本质上来说都是模拟的，比如你觉得计算机处理的都是数字信号吗？并不是，我们只是把那些各种三极管的输出电平给视为0或者1，人脑袋里想的那些数字信号都是一些抽象信号。你不能把抽象的物理层和实际中的模拟信号传输的网线放在一起比较。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>网络</tag>
      </tags>
  </entry>
</search>
